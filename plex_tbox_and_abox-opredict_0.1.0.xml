<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY schema "http://schema.org/" >
    <!ENTITY schema2 "http://schema.org#" >
    <!ENTITY edam "http://edamontology.org/" >
    <!ENTITY mls "http://www.w3.org/ns/mls#" >
    <!ENTITY dc "http://purl.org/dc/terms/" >
    <!ENTITY pwo "http://purl.org/spar/pwo#" >
    <!ENTITY dcat "http://www.w3.org/ns/dcat#" >
    <!ENTITY prov "http://www.w3.org/ns/prov#" >
    <!ENTITY p-plan "http://purl.org/net/p-plan#" >
    <!ENTITY sh "http://www.w3.org/ns/shacl#" >
    <!ENTITY fabio "http://purl.org/spar/fabio/" >
    <!ENTITY opmw "http://www.opmw.org/ontology/" >
    <!ENTITY reprod "https://w3id.org/reproduceme#" >
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY bpmn "http://dkm.fbk.eu/index.php/BPMN2_Ontology#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY opredict "http://purl.org/plex/Instances/OpenPREDICT#" >
    <!ENTITY dul "http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#" >
]>


<rdf:RDF xmlns="http://purl.org/plex#"
     xml:base="http://purl.org/plex"
     xmlns:dc="http://purl.org/dc/terms/"
     xmlns:pwo="http://purl.org/spar/pwo#"
     xmlns:opmw="http://www.opmw.org/ontology/"
     xmlns:p-plan="http://purl.org/net/p-plan#"
     xmlns:prov="http://www.w3.org/ns/prov#"
     xmlns:schema2="http://schema.org#"
     xmlns:mls="http://www.w3.org/ns/mls#"
     xmlns:fabio="http://purl.org/spar/fabio/"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:sh="http://www.w3.org/ns/shacl#"
     xmlns:schema="http://schema.org/"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:dcat="http://www.w3.org/ns/dcat#"
     xmlns:dul="http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#"
     xmlns:opredict="http://purl.org/plex/Instances/OpenPREDICT#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:reprod="https://w3id.org/reproduceme#"
     xmlns:bpmn="http://dkm.fbk.eu/index.php/BPMN2_Ontology#"
     xmlns:edam="http://edamontology.org/">
    <owl:Ontology rdf:about="http://purl.org/plex">
        <owl:versionInfo>0.1.0</owl:versionInfo>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/dc/terms/creator -->

    <rdf:Description rdf:about="&dc;creator">
        <rdfs:seeAlso>http://purl.org/dc/elements/1.1/creator</rdfs:seeAlso>
    </rdf:Description>
    


    <!-- http://purl.org/dc/terms/description -->

    <rdf:Description rdf:about="&dc;description">
        <rdfs:isDefinedBy>http://purl.org/dc/terms/description</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://purl.org/dc/terms/hasVersion -->

    <rdf:Description rdf:about="&dc;hasVersion">
        <rdfs:isDefinedBy>http://purl.org/dc/terms/hasVersion</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://purl.org/net/p-plan#correspondsToStep -->

    <owl:AnnotationProperty rdf:about="&p-plan;correspondsToStep">
        <rdfs:seeAlso>http://purl.org/net/p-plan#correspondsToStep</rdfs:seeAlso>
        <rdfs:domain rdf:resource="&p-plan;Activity"/>
        <rdfs:range rdf:resource="&p-plan;Step"/>
    </owl:AnnotationProperty>
    


    <!-- http://purl.org/net/p-plan#hasInputVar -->

    <owl:AnnotationProperty rdf:about="&p-plan;hasInputVar">
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#hasInputVar</rdfs:isDefinedBy>
    </owl:AnnotationProperty>
    


    <!-- http://purl.org/net/p-plan#hasOutputVar -->

    <owl:AnnotationProperty rdf:about="&p-plan;hasOutputVar">
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#hasOutputVar</rdfs:isDefinedBy>
    </owl:AnnotationProperty>
    


    <!-- http://purl.org/net/p-plan#isStepOfPlan -->

    <owl:AnnotationProperty rdf:about="&p-plan;isStepOfPlan">
        <rdfs:isDefinedBy rdf:resource="&p-plan;isStepOfPlan"/>
    </owl:AnnotationProperty>
    


    <!-- http://purl.org/spar/pwo#hasFirstStep -->

    <rdf:Description rdf:about="&pwo;hasFirstStep">
        <rdfs:isDefinedBy>http://purl.org/spar/pwo/hasFirstStep</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://schema.org#URL -->

    <owl:AnnotationProperty rdf:about="&schema2;URL"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isDescribedBy -->

    <rdf:Description rdf:about="&dul;isDescribedBy">
        <rdfs:isDefinedBy>http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isDescribedBy</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#precedes -->

    <rdf:Description rdf:about="&dul;precedes">
        <rdfs:isDefinedBy>http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#precedes</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.w3.org/ns/dcat#distribution -->

    <rdf:Description rdf:about="&dcat;distribution">
        <rdfs:isDefinedBy>http://www.w3.org/ns/dcat#distribution</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.w3.org/ns/dcat#downloadURL -->

    <rdf:Description rdf:about="&dcat;downloadURL">
        <rdfs:isDefinedBy>http://www.w3.org/ns/dcat#downloadURL</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.w3.org/ns/dcat#mediaType -->

    <owl:AnnotationProperty rdf:about="&dcat;mediaType">
        <rdfs:seeAlso>https://www.w3.org/ns/dcat#mediaType</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/mls#specifiedBy -->

    <owl:AnnotationProperty rdf:about="&mls;specifiedBy">
        <rdfs:seeAlso>http://www.w3.org/ns/mls#specifiedBy</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/prov#entity -->

    <rdf:Description rdf:about="&prov;entity">
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#entity</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.w3.org/ns/prov#generated -->

    <owl:AnnotationProperty rdf:about="&prov;generated">
        <rdfs:seeAlso>http://www.w3.org/ns/prov#generated</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/prov#hadPlan -->

    <owl:AnnotationProperty rdf:about="&prov;hadPlan">
        <rdfs:seeAlso>https://www.w3.org/TR/prov-o/#hadPlan</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/prov#hadRole -->

    <owl:AnnotationProperty rdf:about="&prov;hadRole">
        <rdfs:seeAlso>https://www.w3.org/TR/prov-o/#hadRole</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/prov#qualifiedGeneration -->

    <owl:AnnotationProperty rdf:about="&prov;qualifiedGeneration">
        <rdfs:comment>Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.</rdfs:comment>
        <rdfs:seeAlso>http://www.w3.org/ns/prov#qualifiedGeneration</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/prov#used -->

    <rdf:Description rdf:about="&prov;used">
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#used</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.w3.org/ns/prov#wasAttributedTo -->

    <owl:AnnotationProperty rdf:about="&prov;wasAttributedTo"/>
    


    <!-- http://www.w3.org/ns/prov#wasRevisionOf -->

    <owl:AnnotationProperty rdf:about="&prov;wasRevisionOf">
        <rdfs:seeAlso>http://www.w3.org/ns/prov#wasRevisionOf</rdfs:seeAlso>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/shacl#select -->

    <owl:AnnotationProperty rdf:about="&sh;select">
        <rdfs:domain rdf:resource="&sh;SPARQLConstraint"/>
    </owl:AnnotationProperty>
    


    <!-- http://www.w3.org/ns/shacl#sparql -->

    <owl:AnnotationProperty rdf:about="&sh;sparql"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/dc/terms/language -->

    <owl:ObjectProperty rdf:about="&dc;language">
        <rdfs:range rdf:resource="&dc;LinguisticSystem"/>
        <rdfs:isDefinedBy rdf:resource="&dc;language"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/net/p-plan#hasInputVar -->

    <owl:ObjectProperty rdf:about="&p-plan;hasInputVar">
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#hasInputVar</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="&p-plan;Step"/>
        <rdfs:range rdf:resource="&p-plan;Variable"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/net/p-plan#hasOutputVar -->

    <owl:ObjectProperty rdf:about="&p-plan;hasOutputVar">
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#hasOutputVar</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="&p-plan;Step"/>
        <rdfs:range rdf:resource="&p-plan;Variable"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/net/p-plan#isStepOfPlan -->

    <owl:ObjectProperty rdf:about="&p-plan;isStepOfPlan">
        <rdfs:range rdf:resource="&p-plan;Plan"/>
        <rdfs:domain rdf:resource="&p-plan;Step"/>
        <rdfs:isDefinedBy rdf:resource="&p-plan;isStepOfPlan"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/spar/pwo#hasFirstStep -->

    <rdf:Description rdf:about="&pwo;hasFirstStep">
        <rdfs:isDefinedBy>http://purl.org/spar/pwo/hasFirstStep</rdfs:isDefinedBy>
    </rdf:Description>
    


    <!-- http://www.w3.org/ns/dcat#mediaType -->

    <owl:ObjectProperty rdf:about="&dcat;mediaType">
        <rdfs:seeAlso>https://www.w3.org/ns/dcat#mediaType</rdfs:seeAlso>
        <rdfs:range rdf:resource="&edam;format_1915"/>
        <rdfs:domain rdf:resource="&dcat;Distribution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/mls#specifiedBy -->

    <owl:ObjectProperty rdf:about="&mls;specifiedBy">
        <rdfs:seeAlso>http://www.w3.org/ns/mls#specifiedBy</rdfs:seeAlso>
        <rdfs:range rdf:resource="&mls;EvaluationMeasure"/>
        <rdfs:domain rdf:resource="&mls;ModelEvaluation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#agent -->

    <owl:ObjectProperty rdf:about="&prov;agent">
        <rdfs:seeAlso>https://www.w3.org/TR/prov-o/#p_agent</rdfs:seeAlso>
        <rdfs:range rdf:resource="&prov;Agent"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#generated -->

    <owl:ObjectProperty rdf:about="&prov;generated">
        <rdfs:seeAlso>http://www.w3.org/ns/prov#generated</rdfs:seeAlso>
        <rdfs:domain rdf:resource="&prov;Activity"/>
        <rdfs:range rdf:resource="&prov;Entity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#hadPlan -->

    <owl:ObjectProperty rdf:about="&prov;hadPlan">
        <rdfs:seeAlso>https://www.w3.org/TR/prov-o/#hadPlan</rdfs:seeAlso>
        <rdfs:domain rdf:resource="&prov;Association"/>
        <rdfs:range rdf:resource="&prov;Plan"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#hadRole -->

    <owl:ObjectProperty rdf:about="&prov;hadRole">
        <rdfs:seeAlso>https://www.w3.org/TR/prov-o/#hadRole</rdfs:seeAlso>
        <rdfs:domain rdf:resource="&prov;Association"/>
        <rdfs:range rdf:resource="&prov;Role"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#qualifiedGeneration -->

    <owl:ObjectProperty rdf:about="&prov;qualifiedGeneration">
        <rdfs:comment>Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.</rdfs:comment>
        <rdfs:seeAlso>http://www.w3.org/ns/prov#qualifiedGeneration</rdfs:seeAlso>
        <rdfs:domain rdf:resource="&prov;Entity"/>
        <rdfs:range rdf:resource="&prov;Generation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#qualifiedUsage -->

    <owl:ObjectProperty rdf:about="&prov;qualifiedUsage">
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#qualifiedUsage</rdfs:isDefinedBy>
        <rdfs:range rdf:resource="&prov;Usage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#wasAttributedTo -->

    <owl:ObjectProperty rdf:about="&prov;wasAttributedTo">
        <rdfs:range rdf:resource="&prov;Agent"/>
        <rdfs:domain rdf:resource="&prov;Entity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/prov#wasRevisionOf -->

    <owl:ObjectProperty rdf:about="&prov;wasRevisionOf">
        <rdfs:seeAlso>http://www.w3.org/ns/prov#wasRevisionOf</rdfs:seeAlso>
        <rdfs:domain rdf:resource="&prov;Entity"/>
        <rdfs:range rdf:resource="&prov;Entity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/shacl#sparql -->

    <owl:ObjectProperty rdf:about="&sh;sparql">
        <rdfs:domain rdf:resource="&sh;NodeShape"/>
        <rdfs:range rdf:resource="&sh;SPARQLConstraint"/>
    </owl:ObjectProperty>
    


    <!-- http://www.w3.org/ns/shacl#targetClass -->

    <owl:ObjectProperty rdf:about="&sh;targetClass">
        <rdfs:range rdf:resource="&owl;Thing"/>
        <rdfs:domain rdf:resource="&sh;NodeShape"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/dc/terms/created -->

    <owl:DatatypeProperty rdf:about="&dc;created">
        <rdfs:seeAlso>http://purl.org/dc/terms/created</rdfs:seeAlso>
        <rdfs:range rdf:resource="&rdfs;Literal"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/dc/terms/modified -->

    <owl:DatatypeProperty rdf:about="&dc;modified">
        <rdfs:seeAlso>http://purl.org/dc/terms/modified</rdfs:seeAlso>
        <rdfs:range rdf:resource="&rdfs;Literal"/>
    </owl:DatatypeProperty>
    


    <!-- http://schema.org#URL -->

    <owl:DatatypeProperty rdf:about="&schema2;URL">
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.w3.org/ns/prov#atTime -->

    <owl:DatatypeProperty rdf:about="&prov;atTime">
        <rdfs:seeAlso>http://www.w3.org/ns/prov#atTime</rdfs:seeAlso>
        <rdfs:comment>The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.</rdfs:comment>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://dkm.fbk.eu/index.php/BPMN2_Ontology#ManualTask -->

    <owl:Class rdf:about="&bpmn;ManualTask">
        <rdfs:subClassOf rdf:resource="&p-plan;Step"/>
        <rdfs:isDefinedBy>http://dkm.fbk.eu/index.php/BPMN2_Ontology#manualTask</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://dkm.fbk.eu/index.php/BPMN2_Ontology#ScriptTask -->

    <owl:Class rdf:about="&bpmn;ScriptTask">
        <rdfs:subClassOf rdf:resource="&p-plan;Step"/>
        <rdfs:isDefinedBy>http://dkm.fbk.eu/index.php/BPMN2_Ontology#scriptTask</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://edamontology.org/format_1915 -->

    <owl:Class rdf:about="&edam;format_1915">
        <rdfs:label>Data format</rdfs:label>
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://edamontology.org/format_1915</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://edamontology.org/format_2330 -->

    <owl:Class rdf:about="&edam;format_2330">
        <rdfs:label>Plain text format</rdfs:label>
        <rdfs:subClassOf rdf:resource="&edam;format_1915"/>
        <rdfs:isDefinedBy>http://edamontology.org/format_2330</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://edamontology.org/format_2376 -->

    <owl:Class rdf:about="&edam;format_2376">
        <rdfs:label>Resource Description Framework (RDF)</rdfs:label>
        <rdfs:subClassOf rdf:resource="&edam;format_1915"/>
        <rdfs:isDefinedBy>http://edamontology.org/format_2376</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://edamontology.org/format_3256 -->

    <owl:Class rdf:about="&edam;format_3256">
        <rdfs:label>N-Triples</rdfs:label>
        <rdfs:subClassOf rdf:resource="&edam;format_2376"/>
        <rdfs:isDefinedBy>http://edamontology.org/format_3256</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://edamontology.org/operation_0224 -->

    <owl:Class rdf:about="&edam;operation_0224">
        <rdfs:label>Query and retrieval (EDAM)</rdfs:label>
        <rdfs:subClassOf rdf:resource="&p-plan;Step"/>
        <rdfs:isDefinedBy>http://edamontology.org/operation_0224</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://edamontology.org/operation_2409 -->

    <owl:Class rdf:about="&edam;operation_2409">
        <rdfs:label>Data handling (EDAM)</rdfs:label>
        <rdfs:subClassOf rdf:resource="&p-plan;Step"/>
        <rdfs:seeAlso>http://edamontology.org/operation_2409</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://purl.org/dc/terms/LinguisticSystem -->

    <owl:Class rdf:about="&dc;LinguisticSystem">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://purl.org/dc/terms/LinguisticSystem</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://purl.org/net/p-plan#Activity -->

    <owl:Class rdf:about="&p-plan;Activity">
        <rdfs:subClassOf rdf:resource="&prov;Activity"/>
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#Activity</rdfs:isDefinedBy>
        <rdfs:comment>A p-plan:Activity represents the execution of the process planned in a p-plan:Step. p-plan:Activity is a subclass of prov:Activity</rdfs:comment>
    </owl:Class>
    


    <!-- http://purl.org/net/p-plan#Plan -->

    <owl:Class rdf:about="&p-plan;Plan">
        <rdfs:subClassOf rdf:resource="&prov;Plan"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&pwo;hasFirstStep"/>
                <owl:allValuesFrom rdf:resource="&p-plan;Step"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#Plan</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://purl.org/net/p-plan#Step -->

    <owl:Class rdf:about="&p-plan;Step">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#Step</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://purl.org/net/p-plan#Variable -->

    <owl:Class rdf:about="&p-plan;Variable">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://purl.org/net/p-plan#Variable</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://purl.org/spar/fabio/Triplestore -->

    <owl:Class rdf:about="&fabio;Triplestore">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://purl.org/spar/fabio/Triplestore</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://schema.org/ComputerLanguage -->

    <owl:Class rdf:about="&schema;ComputerLanguage">
        <rdfs:subClassOf rdf:resource="&dc;LinguisticSystem"/>
        <rdfs:isDefinedBy>http://schema.org/ComputerLanguage</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Workflow -->

    <owl:Class rdf:about="&dul;Workflow">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Workflow</rdfs:isDefinedBy>
        <rdfs:comment>A Plan that defines Role(s), Task(s), and a specific structure for tasks to be executed, usually supporting the work of an Organization</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.opmw.org/ontology/WorkflowExecutionArtifact -->

    <owl:Class rdf:about="&opmw;WorkflowExecutionArtifact">
        <rdfs:subClassOf rdf:resource="&prov;Entity"/>
        <rdfs:isDefinedBy>http://www.opmw.org/ontology/WorkflowExecutionArtifact</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/2000/01/rdf-schema#Resource -->

    <owl:Class rdf:about="&rdfs;Resource"/>
    


    <!-- http://www.w3.org/ns/dcat#Dataset -->

    <owl:Class rdf:about="&dcat;Dataset">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/dcat#Dataset</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/dcat#Distribution -->

    <owl:Class rdf:about="&dcat;Distribution">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/dcat#Distribution</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/mls#EvaluationMeasure -->

    <owl:Class rdf:about="&mls;EvaluationMeasure">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/mls#EvaluationMeasure</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/mls#ModelEvaluation -->

    <owl:Class rdf:about="&mls;ModelEvaluation">
        <rdfs:subClassOf rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/mls#ModelEvaluation</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/mls#Run -->

    <owl:Class rdf:about="&mls;Run">
        <rdfs:subClassOf rdf:resource="&p-plan;Activity"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/mls#Run</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Activity -->

    <owl:Class rdf:about="&prov;Activity">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>https://www.w3.org/ns/prov#Activity</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Agent -->

    <owl:Class rdf:about="&prov;Agent">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>https://www.w3.org/TR/prov-o/#Agent</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Association -->

    <owl:Class rdf:about="&prov;Association">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>https://www.w3.org/TR/prov-o/#Association</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Bundle -->

    <owl:Class rdf:about="&prov;Bundle">
        <rdfs:subClassOf rdf:resource="&prov;Entity"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#Bundle</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Entity -->

    <owl:Class rdf:about="&prov;Entity">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>https://www.w3.org/TR/prov-o/#Entity</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#EntityInfluence -->

    <owl:Class rdf:about="&prov;EntityInfluence">
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#EntityInfluence</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Generation -->

    <owl:Class rdf:about="&prov;Generation">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#Generation</rdfs:isDefinedBy>
        <rdfs:comment>Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#InstantaneousEvent -->

    <owl:Class rdf:about="&prov;InstantaneousEvent">
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#InstantaneousEvent</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Plan -->

    <owl:Class rdf:about="&prov;Plan">
        <rdfs:subClassOf rdf:resource="&prov;Entity"/>
        <rdfs:isDefinedBy>https://www.w3.org/TR/prov-o/#Plan</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Role -->

    <owl:Class rdf:about="&prov;Role">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>https://www.w3.org/TR/prov-o/#Role</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#SoftwareAgent -->

    <owl:Class rdf:about="&prov;SoftwareAgent">
        <rdfs:subClassOf rdf:resource="&prov;Agent"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#SoftwareAgent</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/prov#Usage -->

    <owl:Class rdf:about="&prov;Usage">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:subClassOf rdf:resource="&prov;EntityInfluence"/>
        <rdfs:subClassOf rdf:resource="&prov;InstantaneousEvent"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/prov#Usage</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/shacl#NodeShape -->

    <owl:Class rdf:about="&sh;NodeShape">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/shacl#NodeShape</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- http://www.w3.org/ns/shacl#SPARQLConstraint -->

    <owl:Class rdf:about="&sh;SPARQLConstraint">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <rdfs:isDefinedBy>http://www.w3.org/ns/shacl#SPARQLConstraint</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- https://w3id.org/reproduceme#Cell -->

    <owl:Class rdf:about="&reprod;Cell">
        <rdfs:subClassOf rdf:resource="&owl;Thing"/>
        <dc:description>A cell is a multiline text input field in an Interactive Notebook which can either be code cells where code can be excuted or markdown cells where a descriptive text can be provided or raw cells where output can directly be entered. For example, a Jupyter Notebook cell.</dc:description>
        <rdfs:isDefinedBy>https://w3id.org/reproduceme#Cell</rdfs:isDefinedBy>
    </owl:Class>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/plex#ComputerLanguage_Python_3.7 -->

    <owl:NamedIndividual rdf:about="http://purl.org/plex#ComputerLanguage_Python_3.7">
        <rdf:type rdf:resource="&schema;ComputerLanguage"/>
        <rdfs:label>Python 3.7</rdfs:label>
        <owl:versionInfo>3.7</owl:versionInfo>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex#LinguisticSystem_xsd_language_English -->

    <owl:NamedIndividual rdf:about="http://purl.org/plex#LinguisticSystem_xsd_language_English">
        <rdf:type rdf:resource="&dc;LinguisticSystem"/>
        <rdfs:label>en</rdfs:label>
        <rdfs:seeAlso>http://www.datypic.com/sc/xsd/t-xsd_language.html</rdfs:seeAlso>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex#opredict_Link_variable_to_triplestore_for_input_data -->

    <owl:NamedIndividual rdf:about="http://purl.org/plex#opredict_Link_variable_to_triplestore_for_input_data">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Triplestore_endpoint_input_data"/>
        <prov:entity rdf:resource="&opredict;Variable_Triplestore_endpoint_for_input_data"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex#opredict_Variable_Context_Output_Cell0 -->

    <owl:NamedIndividual rdf:about="http://purl.org/plex#opredict_Variable_Context_Output_Cell0">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell01"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell02"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell03"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell04"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell05"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell08"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell10"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_Accuracy_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_AveragePrecision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_F1_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_Precision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_Recall_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_RocAuc_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;Activity_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&p-plan;Activity"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_Accuracy_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_AveragePrecision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_F1_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_Precision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_Recall_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
        <prov:generated rdf:resource="&opredict;ModelEvaluation_RocAuc_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
        <p-plan:correspondsToStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02"/>
        <prov:generated rdf:resource="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Agent_Ahmed -->

    <owl:NamedIndividual rdf:about="&opredict;Agent_Ahmed">
        <rdf:type rdf:resource="&prov;Agent"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Agent_Joao -->

    <owl:NamedIndividual rdf:about="&opredict;Agent_Joao">
        <rdf:type rdf:resource="&prov;Agent"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Agent_Remzi -->

    <owl:NamedIndividual rdf:about="&opredict;Agent_Remzi">
        <rdf:type rdf:resource="&prov;Agent"/>
        <rdfs:label>Remzi</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Association_AhmedAsDeveloper -->

    <owl:NamedIndividual rdf:about="&opredict;Association_AhmedAsDeveloper">
        <rdf:type rdf:resource="&prov;Association"/>
        <prov:agent rdf:resource="&opredict;Agent_Ahmed"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb"/>
        <prov:hadRole rdf:resource="&opredict;Role_Developer"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Association_JoaoAsExecutor -->

    <owl:NamedIndividual rdf:about="&opredict;Association_JoaoAsExecutor">
        <rdf:type rdf:resource="&prov;Association"/>
        <rdfs:label>Joao as executor of OpenPREDICT plan</rdfs:label>
        <prov:agent rdf:resource="&opredict;Agent_Joao"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_SMILES_from_DRUGBANK"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_TARGETS_-from_DRUGBANK_and_KEGG"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_OpenPREDICT_ipynb"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Prepare_Input_Data_Files"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Prepare_triplestore_for_input_data"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-drug-smiles_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-drug-target_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-sider-se_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_files_in_triplestore"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_phenotype_annotations"/>
        <prov:hadRole rdf:resource="&opredict;Role_Executor"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Association_RemziAsDeveloper -->

    <owl:NamedIndividual rdf:about="&opredict;Association_RemziAsDeveloper">
        <rdf:type rdf:resource="&prov;Association"/>
        <rdfs:label>Remzi as developer of OpenPREDICT plan</rdfs:label>
        <prov:agent rdf:resource="&opredict;Agent_Remzi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Add_files_to_triplestore_and_execute_queries"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_SMILES_from_DRUGBANK"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_TARGETS_-from_DRUGBANK_and_KEGG"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_OpenPREDICT_ipynb"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell00"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Format_results_for_presentation"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Prepare_Input_Data_Files"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Prepare_triplestore_for_input_data"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-drug-smiles_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-drug-target_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-sider-se_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_files_in_triplestore"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Upload_files_to_a_triplestore"/>
        <prov:hadRole rdf:resource="&opredict;Role_Developer"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Association_RemziAsExecutor -->

    <owl:NamedIndividual rdf:about="&opredict;Association_RemziAsExecutor">
        <rdf:type rdf:resource="&prov;Association"/>
        <rdfs:label>Remzi as executor (tester?) of OpenPREDICT plan</rdfs:label>
        <prov:agent rdf:resource="&opredict;Agent_Remzi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Add_files_to_triplestore_and_execute_queries"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_and_save_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Download_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_SMILES_from_DRUGBANK"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Execute_query_DRUG_TARGETS_-from_DRUGBANK_and_KEGG"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_OpenPREDICT_ipynb"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell00"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Format_results_for_presentation"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Prepare_Input_Data_Files"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Prepare_triplestore_for_input_data"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_Drugbank_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_Kegg_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_SIDER_dataset"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-drug-smiles_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-drug-target_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_as_drugbank-sider-se_tab"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_files_in_triplestore"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_human_interactome_barabasi"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Save_phenotype_annotations"/>
        <prov:hadPlan rdf:resource="&opredict;Plan_Upload_files_to_a_triplestore"/>
        <prov:hadRole rdf:resource="&opredict;Role_Executor"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#DataFormat_Textfile_tab -->

    <owl:NamedIndividual rdf:about="&opredict;DataFormat_Textfile_tab">
        <rdf:type rdf:resource="&edam;format_1915"/>
        <rdfs:label>.tab with tabular separator</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#DataFormat_Textfile_txt -->

    <owl:NamedIndividual rdf:about="&opredict;DataFormat_Textfile_txt">
        <rdf:type rdf:resource="&edam;format_2330"/>
        <rdfs:label>.txt with comma separator</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#DataFormat_nq_compressed_gz -->

    <owl:NamedIndividual rdf:about="&opredict;DataFormat_nq_compressed_gz">
        <rdf:type rdf:resource="&edam;format_3256"/>
        <rdfs:label>.nq compressed as .gz</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Dataset_OpenPREDICT_InputDatasetPrepared -->

    <owl:NamedIndividual rdf:about="&opredict;Dataset_OpenPREDICT_InputDatasetPrepared">
        <rdf:type rdf:resource="&dcat;Dataset"/>
        <dcat:distribution rdf:resource="&opredict;Triplestore_endpoint_input_data"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Dataset_Phenotype_annotations_HPO_team_Build_1263 -->

    <owl:NamedIndividual rdf:about="&opredict;Dataset_Phenotype_annotations_HPO_team_Build_1263">
        <rdf:type rdf:resource="&dcat;Dataset"/>
        <rdfs:label>Phenotype annotations HPO team (Build #1263)</rdfs:label>
        <dc:hasVersion>Build 1263</dc:hasVersion>
        <dcat:distribution rdf:resource="&opredict;Distribution_phenotype_annotation_hpoteam.tab_Build_1263"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_Phenotype_annotations_file_local -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_Phenotype_annotations_file_local">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>Phenotype annotations file local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_gold_standard_drug_indications_msb201126-s4.xls -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_gold_standard_drug_indications_msb201126-s4.xls">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>msb201126-s4.xls</rdfs:label>
        <dcat:downloadURL>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s4.xls</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_Textfile_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_mesh_annotation_mim2mesh.tsv -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_mesh_annotation_mim2mesh.tsv">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>mim2mesh.tsv</rdfs:label>
        <dcat:downloadURL>http://www.paccanarolab.org/static_content/disease_similarity/mim2mesh.tsv</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_Textfile_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_phenotype_annotation_hpoteam.tab_Build_1263 -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_phenotype_annotation_hpoteam.tab_Build_1263">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>phenotype_annotation_hpoteam.tab (Build #1263)</rdfs:label>
        <dcat:downloadURL>http://compbio.charite.de/jenkins/job/hpo.annotations/1263/artifact/misc/phenotype_annotation_hpoteam.tab</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_Textfile_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_phenotype_annotation_hpoteam.tab_Build_1266 -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_phenotype_annotation_hpoteam.tab_Build_1266">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>phenotype_annotation_hpoteam.tab (Build #1263)</rdfs:label>
        <dcat:downloadURL>http://compbio.charite.de/jenkins/job/hpo.annotations/1266/artifact/misc/phenotype_annotation_hpoteam.tab</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_Textfile_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_pubchem_to_drugbank_pubchem.tsv -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_pubchem_to_drugbank_pubchem.tsv">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>mim2mesh.tsv</rdfs:label>
        <dcat:downloadURL>https://raw.githubusercontent.com/dhimmel/drugbank/3e87872db5fca5ac427ce27464ab945c0ceb4ec6/data/mapping/pubchem.tsv</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_Textfile_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_release-4-drugbank-drugbank.nq.gz -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_release-4-drugbank-drugbank.nq.gz">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>release/4/drugbank/drugbank.nq.gz</rdfs:label>
        <dcat:downloadURL>http://download.bio2rdf.org/files/release/4/drugbank/drugbank.nq.gz</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_nq_compressed_gz"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_release-4-drugbank-drugbank.nq.gz_local -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_release-4-drugbank-drugbank.nq.gz_local">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>release/4/drugbank/drugbank.nq.gz local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_release-4-kegg-kegg-drug.nq.gz -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_release-4-kegg-kegg-drug.nq.gz">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>release/4/kegg/kegg-drug.nq.gz</rdfs:label>
        <dcat:downloadURL>http://download.bio2rdf.org/files/release/4/kegg/kegg-drug.nq.gz</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_nq_compressed_gz"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_release-4-kegg-kegg-drug.nq.gz_local -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_release-4-kegg-kegg-drug.nq.gz_local">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>release/4/kegg/kegg-drug.nq.gz local</rdfs:label>
        <dcat:downloadURL>http://download.bio2rdf.org/files/release/4/kegg/kegg-drug.nq.gz</dcat:downloadURL>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_release-4-sider-sider-se.nq.gz -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_release-4-sider-sider-se.nq.gz">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>release/4/sider/sider-se.nq.gz</rdfs:label>
        <dcat:downloadURL>http://download.bio2rdf.org/files/release/4/sider/sider-se.nq.gz</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_nq_compressed_gz"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_release-4-sider-sider-se.nq.gz_local -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_release-4-sider-sider-se.nq.gz_local">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>release/4/sider/sider-se.nq.gz local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_srep-2016-161017-srep35241-extref-srep35241-s3.txt -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_srep-2016-161017-srep35241-extref-srep35241-s3.txt">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>srep/2016/161017/srep35241/extref/srep35241-s3.txt</rdfs:label>
        <dcat:downloadURL>https://media.nature.com/full/nature-assets/srep/2016/161017/srep35241/extref/srep35241-s3.txt</dcat:downloadURL>
        <dcat:mediaType rdf:resource="&opredict;DataFormat_Textfile_txt"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Distribution_srep35241-s3.txt_local -->

    <owl:NamedIndividual rdf:about="&opredict;Distribution_srep35241-s3.txt_local">
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <rdfs:label>srep35241-s3.txt local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#EvaluationMeasure_PredictiveAccuracy -->

    <owl:NamedIndividual rdf:about="&opredict;EvaluationMeasure_PredictiveAccuracy">
        <rdf:type rdf:resource="&mls;EvaluationMeasure"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#EvaluationMeasure_PredictiveAveragePrecision -->

    <owl:NamedIndividual rdf:about="&opredict;EvaluationMeasure_PredictiveAveragePrecision">
        <rdf:type rdf:resource="&mls;EvaluationMeasure"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#EvaluationMeasure_PredictiveF1 -->

    <owl:NamedIndividual rdf:about="&opredict;EvaluationMeasure_PredictiveF1">
        <rdf:type rdf:resource="&mls;EvaluationMeasure"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#EvaluationMeasure_PredictivePrecision -->

    <owl:NamedIndividual rdf:about="&opredict;EvaluationMeasure_PredictivePrecision">
        <rdf:type rdf:resource="&mls;EvaluationMeasure"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#EvaluationMeasure_PredictiveRecall -->

    <owl:NamedIndividual rdf:about="&opredict;EvaluationMeasure_PredictiveRecall">
        <rdf:type rdf:resource="&mls;EvaluationMeasure"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#EvaluationMeasure_PredictiveRocAuc -->

    <owl:NamedIndividual rdf:about="&opredict;EvaluationMeasure_PredictiveRocAuc">
        <rdf:type rdf:resource="&mls;EvaluationMeasure"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:15.761</prov:atTime>
        <dc:description>This instance can describe information about the generation of the output of the cell, for example here we could have properties for different roles (generator) for each format (html x text), information provided by the user (e.g., data seem to be correct or no data found, etc), etc.</dc:description>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:15.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:16.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:16.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:16.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:17.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:17.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-05-21T00:02:11.011</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:01:17.961</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:02:01.011</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:02:11.011</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:02:31.011</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-01-01T00:02:31.011</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&prov;Generation"/>
        <prov:atTime rdf:datatype="&xsd;dateTime">2019-05-21T00:02:31.011</prov:atTime>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_Pipeline_Source_Cell0_Variable -->

    <owl:NamedIndividual rdf:about="&opredict;Link_Pipeline_Source_Cell0_Variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="http://purl.org/plex#opredict_Variable_Context_Output_Cell0"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_results_to_variable_Input_file_drugbank-drug-smiles_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Link_results_to_variable_Input_file_drugbank-drug-smiles_tab">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Variable_Input_file_drugbank-drug-smiles_tab"/>
        <prov:entity rdf:resource="&opredict;Variable_Query_results_DRUG_SMILES_from_DRUGBANK"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_results_to_variable_Input_file_drugbank-drug-target_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Link_results_to_variable_Input_file_drugbank-drug-target_tab">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Variable_Input_file_drugbank-drug-target_tab"/>
        <prov:entity rdf:resource="&opredict;Variable_Query_results_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_results_to_variable_Input_file_drugbank-sider-se_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Link_results_to_variable_Input_file_drugbank-sider-se_tab">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Variable_Input_file_drugbank-sider-se_tab"/>
        <prov:entity rdf:resource="&opredict;Variable_Query_results_DRUG_SIDE_EFFECTS_from_SIDER"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_variable_to_local_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Link_variable_to_local_Drugbank_dataset">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to local Drugbank dataset</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_release-4-drugbank-drugbank.nq.gz_local"/>
        <prov:entity rdf:resource="&opredict;Variable_Drugbank_dataset_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_variable_to_local_Human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Link_variable_to_local_Human_interactome_barabasi">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to local Human interactome barabasi</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_srep35241-s3.txt_local"/>
        <prov:entity rdf:resource="&opredict;Variable_Human_interactome_barabasi_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_variable_to_local_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Link_variable_to_local_Kegg_dataset">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to local Kegg dataset</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_release-4-kegg-kegg-drug.nq.gz_local"/>
        <prov:entity rdf:resource="&opredict;Variable_Kegg_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_variable_to_local_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Link_variable_to_local_SIDER_dataset">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to local SIDER dataset</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_release-4-sider-sider-se.nq.gz_local"/>
        <prov:entity rdf:resource="&opredict;Variable_SIDER_dataset_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Link_variable_to_local_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Link_variable_to_local_phenotype_annotations">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to local phenotype annotations</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_Phenotype_annotations_file_local"/>
        <prov:entity rdf:resource="&opredict;Variable_Phenotype_annotations_file_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_Accuracy_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_Accuracy_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.833336</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveAccuracy"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_Accuracy_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_Accuracy_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.6803722301090722</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveAccuracy"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_AveragePrecision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_AveragePrecision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.810000</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveAveragePrecision"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_AveragePrecision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_AveragePrecision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.0</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveAveragePrecision"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_F1_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_F1_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.685671</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveF1"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_F1_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_F1_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.0</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveF1"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_Precision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_Precision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.918820</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictivePrecision"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_Precision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_Precision_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.0</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictivePrecision"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_Recall_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_Recall_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.549804</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveRecall"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_Recall_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_Recall_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.0</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveRecall"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_RocAuc_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_RocAuc_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.549804</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveRocAuc"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#ModelEvaluation_RocAuc_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;ModelEvaluation_RocAuc_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&mls;ModelEvaluation"/>
        <dc:description>0.7155250305250306</dc:description>
        <mls:specifiedBy rdf:resource="&opredict;EvaluationMeasure_PredictiveRocAuc"/>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#NodeShape_DRUG_SIDE_EFFECTS_from_SIDER -->

    <owl:NamedIndividual rdf:about="&opredict;NodeShape_DRUG_SIDE_EFFECTS_from_SIDER">
        <rdf:type rdf:resource="&sh;NodeShape"/>
        <sh:targetClass rdf:resource="&opredict;QueryExecution_DRUG_SIDE_EFFECTS_from_SIDER"/>
        <sh:sparql rdf:resource="&opredict;SPARQLConstraint_DRUG_SIDE_EFFECTS_from_SIDER"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#NodeShape_DRUG_SMILES_from_DRUGBANK -->

    <owl:NamedIndividual rdf:about="&opredict;NodeShape_DRUG_SMILES_from_DRUGBANK">
        <rdf:type rdf:resource="&sh;NodeShape"/>
        <sh:targetClass rdf:resource="&opredict;QueryExecution_DRUG_SMILES_from_DRUGBANK"/>
        <sh:sparql rdf:resource="&opredict;SPARQLConstraint_DRUG_SMILES_from_DRUGBANK"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#NodeShape_DRUG_TARGETS_from_DRUGBANK_and_KEGG -->

    <owl:NamedIndividual rdf:about="&opredict;NodeShape_DRUG_TARGETS_from_DRUGBANK_and_KEGG">
        <rdf:type rdf:resource="&sh;NodeShape"/>
        <sh:targetClass rdf:resource="&opredict;QueryExecution_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
        <sh:sparql rdf:resource="&opredict;SPARQLConstraint_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Add_files_to_triplestore_and_execute_queries -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Add_files_to_triplestore_and_execute_queries">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Add files to triplestore and execute queries</rdfs:label>
        <dc:description>Add files to triplestore and execute queries</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Upload_files_to_a_triplestore"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_Drugbank_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download Drugbank dataset</rdfs:label>
        <dc:description>Download Drugbank dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_Drugbank_dataset_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_Kegg_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download Kegg dataset</rdfs:label>
        <dc:description>Download Kegg dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_Kegg_dataset_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_SIDER_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download SIDER dataset</rdfs:label>
        <dc:description>Download SIDER dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_SIDER_dataset_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_Drugbank_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save Drugbank dataset</rdfs:label>
        <dc:description>Download and save Drugbank dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_Drugbank_dataset"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_Kegg_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save Kegg dataset</rdfs:label>
        <dc:description>Download and save Kegg dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_Kegg_dataset"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_SIDER_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save SIDER dataset</rdfs:label>
        <dc:description>Download and save SIDER dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_SIDER_dataset"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_gold_standard_drug_indications -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_gold_standard_drug_indications">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save the mappings between OMIM diseases and UMLS concepts used in the PREDICT study (msb201126-s4.xls)</rdfs:label>
        <dc:description>#!/usr/bin/env python
# coding: utf-8

&quot;&quot;&quot;
RDF generator for the PREDICT drug indication gold standard (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s4.xls)
@version 1.0
@author Remzi Celebi
&quot;&quot;&quot;


import pandas as pd
from csv import reader
import utils
from utils import Dataset, DataResource
from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph
from rdflib import Namespace
import datetime


DC = Namespace(&quot;http://purl.org/dc/terms/&quot;)

mapping_df = pd.read_excel(&apos;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s4.xls&apos;)
#save the original file
mapping_df.to_csv(&apos;../data/external/msb201126-s4.csv&apos;, index=False)


mapping_df[&apos;OMIM disease name&apos;].replace({&apos;Neuropathy, Hereditary Sensory And Autonomic, Type I, With Cough And&apos;:
                                         &apos;Neuropathy, Hereditary Sensory And Autonomic, Type I, With Cough And Gastroesophageal Reflux&apos;}, inplace=True)

goldstd_df = pd.read_excel(&apos;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s1.xls&apos;)
# save the file
goldstd_df.to_csv(&apos;../data/external/msb201126-s1.csv&apos;, sep=&apos;\t&apos;, index=False)

goldstd_df[&apos;Drug name&apos;].replace({&apos;Divalproex Sodium&apos;:&apos;Valproic Acid&apos;,
                                 &apos;Bismuth&apos;:&apos;Bismuth subsalicylate&apos;,
                                &apos;Clobetasol&apos;:&apos;Clobetasol propionate&apos;,
                               &apos;Guanadrel Sulfate&apos;:&apos;Guanadrel&apos;,
                                 &apos;Marinol&apos;:&apos;Dronabinol&apos;,
                               &apos;Medroxyprogesterone&apos;:&apos;Medroxyprogesterone acetate&apos;,
                                &apos;Megestrol&apos;:&apos;Megestrol acetate&apos;,
                                &apos;Propoxyphene&apos;:&apos;Dextropropoxyphene&apos;,
                                 &apos;Salicyclic Acid&apos;:&apos;Salicylic acid&apos;,
                                &apos;Ipratropium&apos;:&apos;Ipratropiumbromid&apos;,
                                &apos;Adenosine Monophosphate&apos;:&apos;Adenosine monophosphate&apos;,
                                &apos;Arsenic Trioxide&apos;:&apos;Arsenic trioxide&apos;,
                                &apos;Ethacrynic Acid&apos;:&apos;Ethacrynic acid&apos;,
                                &apos;Fondaparinux Sodium&apos;:&apos;Fondaparinux sodium&apos;,
                                 &apos;Meclofenamic Acid&apos;:&apos;Meclofenamic acid&apos;,
                                &apos;Methyl Aminolevulinate&apos;:&apos;Methyl aminolevulinate&apos;},inplace=True)




merged_df = goldstd_df.merge(mapping_df, left_on=&apos;Disease name&apos;, right_on=&apos;OMIM disease name&apos;)


drug_synonym_df = pd.read_csv(&apos;../data/input/drugbank-drug-synonym.csv&apos;)
merged_df = merged_df.merge(drug_synonym_df, left_on=&apos;Drug name&apos;, right_on=&apos;name&apos;)

print (&apos;# of drug-disease associations&apos;,len(merged_df[[&apos;drugid&apos;,&apos;OMIM ID&apos;]].drop_duplicates()))


gold_std_mapped_df = merged_df[[&apos;drugid&apos;,&apos;OMIM ID&apos;]].drop_duplicates()
gold_std_mapped_df[&apos;drugid&apos;] = gold_std_mapped_df[&apos;drugid&apos;].map(lambda x: &apos;http://bio2rdf.org/drugbank:&apos;+str(x))
gold_std_mapped_df[&apos;OMIM ID&apos;] = gold_std_mapped_df[&apos;OMIM ID&apos;].map(lambda x: &apos;http://bio2rdf.org/omim:&apos;+str(x))
gold_std_mapped_df.rename(columns={&apos;OMIM ID&apos;:&apos;http://bio2rdf.org/openpredict_vocabulary:indication&apos;},inplace=True)
gold_std_mapped_df= gold_std_mapped_df.set_index(&apos;drugid&apos;, drop=True)

column_types ={&apos;http://bio2rdf.org/openpredict_vocabulary:indication&apos;:&apos;URI&apos;}
graphURI =&apos;http://fairworkflows.org/openpredict_resource:fairworkflows.dataset.openpredict.predict.R1&apos;
g = ConjunctiveGraph(identifier = URIRef(graphURI))  
g=  utils.to_rdf(g, gold_std_mapped_df, column_types, &apos;http://bio2rdf.org/drugbank:Drug&apos; )



def addMetaData(g, graphURI):
    #generate dataset
    data_source = Dataset(qname=graphURI, graph = g)
    data_source.setURI(graphURI)
    data_source.setTitle(&apos;Supplementary data used in the PREDICT&apos;)
    data_source.setDescription(&apos;Drug indications gold standard and mappings used in the study of &quot;PREDICT: a method for inferring novel drug indications with application to personalized medicine&quot; &apos;)
    data_source.setPublisher(&apos;https://www.embopress.org/journal/17444292&apos;)
    data_source.setPublisherName(&apos;Molecular Systems Biology&apos;)
    data_source.addRight(&apos;use-share-modify&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q56863002&apos;)
    data_source.setLicense(&apos;https://www.embopress.org/page/journal/17444292/about&apos;)
    data_source.setHomepage(&apos;https://dx.doi.org/10.1038%2Fmsb.2011.26&apos;)
    data_source.setVersion(&apos;1.0&apos;)


    #generate dataset distribution
    data_dist1 = DataResource(qname=graphURI, graph = data_source.toRDF())
    data_dist1.setURI(&apos;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s4.xls&apos;)
    data_dist1.setTitle(&apos;Mapping between OMIM diseases and UMLS concepts used in the PREDICT study (msb201126-s4.xls)&apos;)
    data_dist1.setDescription(&apos;This file contains the mappings between OMIM diseases and UMLS concepts used in the PREDICT study&apos;)
    data_dist1.setLicense(&apos;https://creativecommons.org/publicdomain/zero/1.0/&apos;)
    data_dist1.setVersion(&apos;1.0&apos;)
    data_dist1.setFormat(&apos;application/vnd.ms-excel&apos;)
    data_dist1.setMediaType(&apos;application/vnd.ms-excel&apos;)
    data_dist1.setPublisher(&apos;https://www.embopress.org/journal/17444292&apos;)
    data_dist1.addRight(&apos;use-share-modify&apos;)
    data_dist1.setRetrievedDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    data_dist1.setDataset(data_source.getURI())
    
    
    #generate dataset distribution
    data_dist2 = DataResource(qname=graphURI, graph = data_dist1.toRDF())
    data_dist2.setURI(&apos;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s1.xls&apos;)
    data_dist2.setTitle(&apos;Drug indications gold standard used in the PREDICT study (msb201126-s1.xls)&apos;)
    data_dist2.setDescription(&apos;This file contains the gold standard drug indications used in the PREDICT study&apos;)
    data_dist2.setLicense(&apos;https://creativecommons.org/publicdomain/zero/1.0/&apos;)
    data_dist2.setVersion(&apos;1.0&apos;)
    data_dist2.setFormat(&apos;application/vnd.ms-excel&apos;)
    data_dist2.setMediaType(&apos;application/vnd.ms-excel&apos;)
    data_dist2.setPublisher(&apos;https://www.embopress.org/journal/17444292&apos;)
    data_dist2.addRight(&apos;use-share-modify&apos;)
    data_dist2.setRetrievedDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    data_dist2.setDataset(data_source.getURI())
     

    #generate RDF data distrubtion
    rdf_dist = DataResource(qname=graphURI, graph = data_dist2.toRDF() )
    rdf_dist.setURI(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/predict-gold-standard-omim.nq.gz&apos;)
    rdf_dist.setTitle(&apos;RDF version of PREDICT drug indication gold standard&apos;)
    rdf_dist.setDescription(&apos;This file is the RDF version of PREDICT drug indication gold standard&apos;)
    rdf_dist.setLicense(&apos;http://creativecommons.org/licenses/by/3.0/&apos;)
    rdf_dist.setVersion(&apos;1.0&apos;)
    rdf_dist.setFormat(&apos;application/n-quads&apos;)
    rdf_dist.setMediaType(&apos;application/n-quads&apos;)
    rdf_dist.addRight(&apos;use-share-modify&apos;)
    rdf_dist.addRight(&apos;by-attribution&apos;)
    rdf_dist.addRight(&apos;restricted-by-source-license&apos;)
    rdf_dist.setCreateDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    rdf_dist.setCreator(&apos;https://github.com/fair-workflows/openpredict/src/MappingPREDICTGoldstandard.py&apos;)
    rdf_dist.setDownloadURL(&apos;https://github.com/fair-workflows/openpredict/known_associations/predict-gold-standard-omim.nq.gz&apos;)
    rdf_dist.setDataset(data_dist2.getURI())
    rdf_dist.addSource(&apos;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s1.xls&apos;)
    rdf_dist.addSource(&apos;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/bin/msb201126-s4.xls&apos;)
      
    return rdf_dist.toRDF()

g= addMetaData(g, graphURI)

outfile =&apos;../data/rdf/predict-gold-standard-omim.nq&apos;
g.serialize(outfile, format=&apos;nquads&apos;)
print(&apos;RDF is generated at &apos;+outfile)



</dc:description>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/2e1bb7b6ba12e2df3e80d2b0a89a116703ce7180/src/MappingPREDICTGoldstandard.py</dcat:downloadURL>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_gold_standard_drug_indications"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_human_interactome_barabasi">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save human interactome barabasi</rdfs:label>
        <dc:description>Download and save human interactome barabasi</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_human_interactome_barabasi"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_human_interactome_barabasi_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_human_interactome_barabasi_v02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save human interactome barabasi</rdfs:label>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/2e1bb7b6ba12e2df3e80d2b0a89a116703ce7180/src/HumanInteractome.py</dcat:downloadURL>
        <dc:description>#!/usr/bin/env python
# coding: utf-8

&quot;&quot;&quot;
RDF generator for the Human Interactome (https://media.nature.com/full/nature-assets/srep/2016/161017/srep35241/extref/srep35241-s3.txt)
@version 1.0
@author Remzi Celebi
&quot;&quot;&quot;

import pandas as pd
import utils
from utils import Dataset, DataResource

from rdflib import Namespace
from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph
import datetime

DC = Namespace(&quot;http://purl.org/dc/terms/&quot;)


def download():
    url = &apos;https://media.nature.com/full/nature-assets/srep/2016/161017/srep35241/extref/srep35241-s3.txt&apos;
    return pd.read_csv(url,skiprows=25,sep=&apos;\t&apos;)


interactome_df = download()

interactome_df.rename(columns={&apos;# gene_ID_1&apos;:&apos;gene_id_1&apos;,&apos; gene_ID_2&apos;:&apos;gene_id_2&apos;,&apos;data_source(s)&apos;:&apos;source&apos;}, inplace=True)

# save the file
interactome_df.to_csv(&apos;../data/external/human_interactome.tsv&apos;, sep=&apos;\t&apos;, index=False)


interactome_df.index =interactome_df.apply(lambda row: &apos;http://bio2rdf.org/openpredict_resource:&apos;+str(row[&apos;gene_id_1&apos;])+&apos;_&apos;+str(row[&apos;gene_id_2&apos;]), axis=1)

interactome_df[&apos;gene_id_1&apos;] = interactome_df[&apos;gene_id_1&apos;].map(lambda x: &apos;http://bio2rdf.org/ncbigene:&apos;+str(x))
interactome_df[&apos;gene_id_2&apos;] = interactome_df[&apos;gene_id_2&apos;].map(lambda x: &apos;http://bio2rdf.org/ncbigene:&apos;+str(x))
interactome_df.rename(columns={&apos;gene_id_1&apos;:&apos;http://bio2rdf.org/irefindex_vocabulary:interactor_a&apos;},inplace=True)

interactome_df.rename(columns={&apos;gene_id_2&apos;:&apos;http://bio2rdf.org/irefindex_vocabulary:interactor_b&apos;},inplace=True)
interactome_df.rename(columns={&apos;source&apos;:&apos;http://bio2rdf.org/irefindex_vocabulary:source&apos;},inplace=True)


column_types ={&apos;http://bio2rdf.org/irefindex_vocabulary:interactor_a&apos;:&apos;URI&apos;,&apos;http://bio2rdf.org/irefindex_vocabulary:interactor_b&apos;:&apos;URI&apos;,&apos;http://bio2rdf.org/irefindex_vocabulary:source&apos;:&apos;Literal&apos;}
graphURI = URIRef(&apos;http://fairworkflows.org/openpredict_resource:fairworkflows.dataset.openpredict.interactome.R1&apos;)
g =  ConjunctiveGraph(identifier = graphURI)     
g=  utils.to_rdf(g, interactome_df, column_types, &apos;http://edamontology.org/topic_0128&apos; )

def addMetaData(g, graphURI):
    #generate dataset
    data_source = Dataset(qname=graphURI, graph = g)
    data_source.setURI(graphURI)
    data_source.setTitle(&apos;The Human Interactome Dataset&apos;)
    data_source.setDescription(&apos;Human Interactome data used in &quot;Uncovering Disease-Disease Relationships Through The Human Interactome&quot; study&apos;)
    data_source.setPublisher(&apos;https://science.sciencemag.org/&apos;)
    data_source.setPublisherName(&apos;American Association for the Advancement of Science&apos;)
    data_source.addRight(&apos;no-commercial&apos;)
    data_source.addRight(&apos;use&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q896177&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q25113323&apos;)
    data_source.setLicense(&apos;https://www.sciencemag.org/about/terms-service&apos;)
    data_source.setHomepage(&apos;https://dx.doi.org/10.1126%2Fscience.1257601&apos;)
    data_source.setVersion(&apos;1.0&apos;)


    #generate dataset distribution
    data_dist = DataResource(qname=graphURI, graph = data_source.toRDF())
    data_dist.setURI(&apos;https://media.nature.com/full/nature-assets/srep/2016/161017/srep35241/extref/srep35241-s3.txt&apos;)
    data_dist.setTitle(&apos;The Human Interactome Dataset (srep35241-s3.txt)&apos;)
    data_dist.setLicense(&apos;https://www.sciencemag.org/about/terms-service&apos;)
    data_dist.setVersion(&apos;1.0&apos;)
    data_dist.setFormat(&apos;text/tab-separated-value&apos;)
    data_dist.setMediaType(&apos;text/tab-separated-value&apos;)
    data_dist.setPublisher(&apos;https://science.sciencemag.org/&apos;)
    data_dist.addRight(&apos;no-commercial&apos;)
    data_dist.addRight(&apos;use&apos;)
    data_dist.setRetrievedDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    data_dist.setDataset(data_source.getURI())

    #generate RDF data distrubtion
    rdf_dist = DataResource(qname=graphURI, graph = data_dist.toRDF() )
    rdf_dist.setURI(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/human_interactome.nq.gz&apos;)
    rdf_dist.setTitle(&apos;RDF Version of the Human Interactome&apos;)
    rdf_dist.setLicense(&apos;http://creativecommons.org/licenses/by/3.0/&apos;)
    rdf_dist.setVersion(&apos;1.0&apos;)
    rdf_dist.setFormat(&apos;application/n-quads&apos;)
    rdf_dist.setMediaType(&apos;application/n-quads&apos;)
    rdf_dist.addRight(&apos;use-share-modify&apos;)
    rdf_dist.addRight(&apos;by-attribution&apos;)
    rdf_dist.addRight(&apos;restricted-by-source-license&apos;)
    rdf_dist.setCreateDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    rdf_dist.setCreator(&apos;https://github.com/fair-workflows/openpredict/src/HumanInteractome.py&apos;)
    rdf_dist.setDownloadURL(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/human_interactome.nq.gz&apos;)
    rdf_dist.setDataset(data_dist.getURI())
      
    return rdf_dist.toRDF()

g = addMetaData(g, graphURI)


outfile =&apos;../data/rdf/human_interactome.nq&apos;
g.serialize(outfile, format=&apos;nquads&apos;)
print(&apos;RDF is generated at &apos;+outfile)



</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <prov:wasRevisionOf rdf:resource="&opredict;Plan_Download_and_save_human_interactome_barabasi"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_Human_interactome_barabasi_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_mesh_annotation -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_mesh_annotation">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save drug indication gold standard (http://www.paccanarolab.org/static_content/disease_similarity/mim2mesh.tsv)</rdfs:label>
        <dc:description>#!/usr/bin/env python
# coding: utf-8
&quot;&quot;&quot;
RDF generator for the PREDICT drug indication gold standard (http://www.paccanarolab.org/static_content/disease_similarity/mim2mesh.tsv)
@version 1.0
@author Remzi Celebi
&quot;&quot;&quot;


import pandas as pd
from csv import reader
import utils
from utils import Dataset, DataResource
from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph
from rdflib import Namespace
import datetime


DC = Namespace(&quot;http://purl.org/dc/terms/&quot;)


url = &apos;http://www.paccanarolab.org/static_content/disease_similarity/mim2mesh.tsv&apos;
df = pd.read_csv(url,header=None)
#save the original file
df.to_csv(&apos;../data/external/mim2mesh.tsv&apos;, sep=&apos;,&apos;, index=False, header=None)


omim_annots =[]
with open(&apos;../data/external/mim2mesh.tsv&apos;,&apos;r&apos;) as mim2mesh_file:
    for row in mim2mesh_file:
        line = row.strip().split(&apos;\t&apos;)
        omim =line[0]
        for i in range(1,len(line)):
            omim_annots.append([omim,line[i]])

mim2mesh_df = pd.DataFrame(omim_annots, columns=[&apos;disease&apos;,&apos;annotation&apos;])

mim2mesh_df[&apos;disease&apos;] = mim2mesh_df[&apos;disease&apos;].map(lambda x: &apos;http://bio2rdf.org/omim:&apos;+str(x))
mim2mesh_df[&apos;annotation&apos;] = mim2mesh_df[&apos;annotation&apos;].map(lambda x: &apos;http://bio2rdf.org/mesh:&apos;+str(x))
mim2mesh_df = mim2mesh_df.set_index(&apos;disease&apos;, drop=True)
mim2mesh_df.rename(columns={&apos;annotation&apos;:&apos;http://semanticscience.org/resource/SIO_000255&apos;},inplace=True)
column_types ={&apos;http://semanticscience.org/resource/SIO_000255&apos;:&apos;URI&apos;}
graphURI = URIRef(&apos;http://fairworkflows.org/openpredict_resource:fairworkflows.dataset.openpredict.meshannot.R1&apos;)
    
g = ConjunctiveGraph(identifier = graphURI )     
g =  utils.to_rdf(g, mim2mesh_df, column_types, &apos;http://bio2rdf.org/omim_vocabulary:Phenotype&apos; )

def addMetaData(g, graphURI):
    #generate dataset
    data_source = Dataset(qname=graphURI, graph = g)
    data_source.setURI(graphURI)
    data_source.setTitle(&apos;Mesh Annotations for OMIM diseases&apos;)
    data_source.setDescription(&apos;This dataset contains the MeSH terms associated with the publications referenced in OMIM. This dataset is used in  &quot; https://doi.org/10.1038/srep17658&quot;&apos;)
    data_source.setPublisher(&apos;http://www.paccanarolab.org&apos;)
    data_source.setPublisherName(&apos;the Paccanaro Lab&apos;)
    data_source.addRight(&apos;use-share-modify&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q199897&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q857525&apos;)
    data_source.setLicense(&apos;http://creativecommons.org/licenses/by/4.0/&apos;)
    data_source.setHomepage(&apos;http://www.paccanarolab.org/disease_similarity/&apos;)
    data_source.setVersion(&apos;1.0&apos;)


    #generate dataset distribution
    data_dist = DataResource(qname=graphURI, graph = data_source.toRDF())
    data_dist.setURI(&apos;http://www.paccanarolab.org/static_content/disease_similarity/mim2mesh.tsv&apos;)
    data_dist.setTitle(&apos;Mesh Annotations by the Paccanaro Lab(mim2mesh.tsv)&apos;)
    data_dist.setLicense(&apos;http://creativecommons.org/licenses/by/4.0/&apos;)
    data_dist.setVersion(&apos;1.0&apos;)
    data_dist.setFormat(&apos;text/tab-separated-value&apos;)
    data_dist.setMediaType(&apos;text/tab-separated-value&apos;)
    data_dist.setPublisher(&apos;http://www.paccanarolab.org&apos;)
    data_dist.addRight(&apos;use-share-modify&apos;)
    data_dist.setRetrievedDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    data_dist.setDataset(data_source.getURI())

    #generate RDF data distrubtion
    rdf_dist = DataResource(qname=graphURI, graph = data_dist.toRDF() )
    rdf_dist.setURI(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/omim_mesh_annotations.nq.gz&apos;)
    rdf_dist.setTitle(&apos;RDF Version of the MESH Annotations for OMIM diseases&apos;)
    rdf_dist.setLicense(&apos;http://creativecommons.org/licenses/by/3.0/&apos;)
    rdf_dist.setVersion(&apos;1.0&apos;)
    rdf_dist.setFormat(&apos;application/n-quads&apos;)
    rdf_dist.setMediaType(&apos;application/n-quads&apos;)
    rdf_dist.addRight(&apos;use-share-modify&apos;)
    rdf_dist.addRight(&apos;by-attribution&apos;)
    rdf_dist.addRight(&apos;restricted-by-source-license&apos;)
    rdf_dist.setCreateDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    rdf_dist.setCreator(&apos;https://github.com/fair-workflows/openpredict/src/RDFConversionOfMeshAnnotation.py&apos;)
    rdf_dist.setDownloadURL(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/omim_mesh_annotations.nq.gz&apos;)
    rdf_dist.setDataset(data_dist.getURI())
      
    return rdf_dist.toRDF()


g= addMetaData(g, graphURI)

outfile =&apos;../data/rdf/omim_mesh_annotations.nq&apos;
g.serialize(outfile, format=&apos;nquads&apos;)
print(&apos;RDF is generated at &apos;+outfile)


</dc:description>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/2e1bb7b6ba12e2df3e80d2b0a89a116703ce7180/src/RDFConversionOfMeshAnnotation.py</dcat:downloadURL>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_mesh_annotation_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_phenotype_annotations">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save phenotype annotations </rdfs:label>
        <dc:description>1-Download from:
http://compbio.charite.de/jenkins/job/hpo.annotations/lastStableBuild/artifact/misc/phenotype_annotation_hpoteam.tab
2-Save file as:
/input/phenotype_annotation_hpoteam.tab</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_phenotype_annotations"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_phenotype_annotations_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_phenotype_annotations_v02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save phenotype annotations </rdfs:label>
        <dcat:downloadURL>https://raw.githubusercontent.com/fair-workflows/openpredict/master/src/OMIMHpoAnnotations.py?token=AB7DEPUIR4M6G6AKGFIIBF25H4GWC</dcat:downloadURL>
        <dc:description>#!/usr/bin/env python
# coding: utf-8

&quot;&quot;&quot;
RDF generator for the OMIM HPO Annotations (http://compbio.charite.de/jenkins/job/hpo.annotations/lastSuccessfulBuild/artifact/misc/phenotype_annotation_hpoteam.tab)
@version 1.0
@author Remzi Celebi
&quot;&quot;&quot;


import pandas as pd
from csv import reader
import utils
from utils import Dataset, DataResource
from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph
from rdflib import Namespace
import datetime

DC = Namespace(&quot;http://purl.org/dc/terms/&quot;)


url = &apos;http://compbio.charite.de/jenkins/job/hpo.annotations/lastSuccessfulBuild/artifact/misc/phenotype_annotation_hpoteam.tab&apos;
hpoannot_df = pd.read_csv(url,sep=&apos;\t&apos;, header=None)

#save the file
hpoannot_df.to_csv(&apos;../data/external/phenotype_annotation_hpoteam.tab&apos;, sep=&apos;\t&apos;, index=False, header=None)

#preprocessing
hpoannot_df.rename(columns={0:&apos;DB&apos;,1:&apos;DB_Object_ID&apos;,4:&apos;HPO_ID&apos;}, inplace=True)
hpoannot_df = hpoannot_df[[&apos;DB&apos;,&apos;DB_Object_ID&apos;,&apos;HPO_ID&apos;]]
hpoannot_df= hpoannot_df[hpoannot_df.DB ==&apos;OMIM&apos;]
hpoannot_df.drop(columns=[&apos;DB&apos;], inplace=True)

hpoannot_df[&apos;DB_Object_ID&apos;] = hpoannot_df[&apos;DB_Object_ID&apos;].map(lambda x: &apos;http://bio2rdf.org/omim:&apos;+str(x))
hpoannot_df[&apos;HPO_ID&apos;]= hpoannot_df[&apos;HPO_ID&apos;].map(lambda x: &apos;http://bio2rdf.org/hpo:&apos;+str(x[3:]))
hpoannot_df = hpoannot_df.set_index(&apos;DB_Object_ID&apos;, drop=True)
hpoannot_df.rename(columns={&apos;HPO_ID&apos;:&apos;http://semanticscience.org/resource/SIO_000255&apos;},inplace=True)

column_types ={&apos;http://semanticscience.org/resource/SIO_000255&apos;:&apos;URI&apos;}
graphURI = URIRef(&apos;http://fairworkflows.org/openpredict_resource:fairworkflows.dataset.openpredict.hpoannot.R1&apos;)
g = ConjunctiveGraph(identifier = graphURI)     

g=  utils.to_rdf(g, hpoannot_df, column_types, &apos;http://bio2rdf.org/omim_vocabulary:Phenotype&apos; )

def addMetaData(g, graphURI):
    #generate dataset
    data_source = Dataset(qname=graphURI, graph = g)
    data_source.setURI(graphURI)
    data_source.setTitle(&apos;Phenotype annotatations by the HPO-team&apos;)
    data_source.setDescription(&apos;This dataset contains manual and semi-automated annotations created by the HPO-team. These are annotations of OMIM-, Orphanet-, and DECIPHER-entries&apos;)
    data_source.setPublisher(&apos;https://monarchinitiative.org/&apos;)
    data_source.setPublisherName(&apos;Monarch Initiative&apos;)
    data_source.addRight(&apos;use&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q17027854&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q45314346&apos;)
    data_source.setLicense(&apos;https://hpo.jax.org/app/license&apos;)
    data_source.setHomepage(&apos;https://hpo.jax.org/app/download/annotation&apos;)
    data_source.setVersion(&apos;1.0&apos;)


    #generate dataset distribution
    data_dist = DataResource(qname=graphURI, graph = data_source.toRDF())
    data_dist.setURI(&apos;http://compbio.charite.de/jenkins/job/hpo.annotations/lastStableBuild/artifact/misc/phenotype_annotation.tab&apos;)
    data_dist.setTitle(&apos;Phenotypes annotated by the HPO-team (phenotype_annotation_hpoteam.tab)&apos;)
    data_dist.setLicense(&apos;https://hpo.jax.org/app/license&apos;)
    data_dist.setVersion(&apos;1.0&apos;)
    data_dist.setFormat(&apos;text/tab-separated-value&apos;)
    data_dist.setMediaType(&apos;text/tab-separated-value&apos;)
    data_dist.setPublisher(&apos;https://monarchinitiative.org/&apos;)
    data_dist.addRight(&apos;use&apos;)
    data_dist.setRetrievedDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    data_dist.setDataset(data_source.getURI())

    #generate RDF data distrubtion
    rdf_dist = DataResource(qname=graphURI, graph = data_dist.toRDF() )
    rdf_dist.setURI(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/hpo_annotations.nq.gz&apos;)
    rdf_dist.setTitle(&apos;RDF Version of the OMIM HPO Annotations&apos;)
    rdf_dist.setLicense(&apos;http://creativecommons.org/licenses/by/3.0/&apos;)
    rdf_dist.setVersion(&apos;1.0&apos;)
    rdf_dist.setFormat(&apos;application/n-quads&apos;)
    rdf_dist.setMediaType(&apos;application/n-quads&apos;)
    rdf_dist.addRight(&apos;use-share-modify&apos;)
    rdf_dist.addRight(&apos;by-attribution&apos;)
    rdf_dist.addRight(&apos;restricted-by-source-license&apos;)
    rdf_dist.setCreateDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    rdf_dist.setCreator(&apos;https://github.com/fair-workflows/openpredict/src/OMIMHpoAnnotations.py&apos;)
    rdf_dist.setDownloadURL(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/hpo_annotations.nq.gz&apos;)
    rdf_dist.setDataset(data_dist.getURI())
      
    return rdf_dist.toRDF()

g = addMetaData(g, graphURI)
outfile =&apos;../data/rdf/hpo_annotations.nq&apos;
g.serialize(outfile, format=&apos;nquads&apos;)
print(&apos;RDF is generated at &apos;+outfile)

</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:wasRevisionOf rdf:resource="&opredict;Plan_Download_and_save_phenotype_annotations"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download-_phenotype_annotations_to_variable_v02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_and_save_pubchem_to_drugbank -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_and_save_pubchem_to_drugbank">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download and save the mappings from Pubchem ids to Drugbank ids (https://raw.githubusercontent.com/dhimmel/drugbank/3e87872db5fca5ac427ce27464ab945c0ceb4ec6/data/mapping/pubchem.tsv)</rdfs:label>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/2e1bb7b6ba12e2df3e80d2b0a89a116703ce7180/src/RDFConversionOfPubchemMapping.py</dcat:downloadURL>
        <dc:description>#!/usr/bin/env python
# coding: utf-8
&quot;&quot;&quot;
RDF generator for the mappings from Pubchem ids to Drugbank ids (https://raw.githubusercontent.com/dhimmel/drugbank/3e87872db5fca5ac427ce27464ab945c0ceb4ec6/data/mapping/pubchem.tsv)
@version 1.0
@author Remzi Celebi
&quot;&quot;&quot;


import pandas as pd
from csv import reader
import utils
from utils import Dataset, DataResource
from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph
from rdflib import Namespace
import datetime


DC = Namespace(&quot;http://purl.org/dc/terms/&quot;)


url = &apos;https://raw.githubusercontent.com/dhimmel/drugbank/3e87872db5fca5ac427ce27464ab945c0ceb4ec6/data/mapping/pubchem.tsv&apos;
drugbank_map_df = pd.read_csv(url, sep=&apos;\t&apos;)

#save the original file
drugbank_map_df.to_csv(&apos;../data/external/pubchem.tsv&apos;, sep=&apos;\t&apos;, index=False)


drugbank_map_df[&apos;drugbank_id&apos;] = drugbank_map_df[&apos;drugbank_id&apos;].map(lambda x: &apos;http://bio2rdf.org/drugbank:&apos;+str(x))
drugbank_map_df[&apos;pubchem_id&apos;] = drugbank_map_df[&apos;pubchem_id&apos;].map(lambda x: &apos;http://bio2rdf.org/pubchem.compound:&apos;+str(x))
drugbank_map_df = drugbank_map_df.set_index(&apos;drugbank_id&apos;, drop=True)
drugbank_map_df.rename(columns={&apos;pubchem_id&apos;:&apos;http://bio2rdf.org/openpredict_vocabulary:x-pubchemcompound&apos;},inplace=True)

column_types ={&apos;http://bio2rdf.org/openpredict_vocabulary:x-pubchemcompound&apos;:&apos;URI&apos;}
graphURI = URIRef(&apos;http://fairworkflows.org/openpredict_resource:fairworkflows.dataset.openpredict.pubchem.R1&apos;)
g = ConjunctiveGraph(identifier = graphURI)     

g = utils.to_rdf(g, drugbank_map_df, column_types, &apos;http://bio2rdf.org/drugbank:Drug&apos; )


def addMetaData(g, graphURI):
    #generate dataset
    data_source = Dataset(qname=graphURI, graph = g)
    data_source.setURI(graphURI)
    data_source.setTitle(&apos;Pubchem mappings for Drugbank drugs&apos;)
    data_source.setDescription(&apos;DrugBank to PubChem mapping using InChI strings created by Daniel Himmelstein.&apos;)
    data_source.setPublisher(&apos;https://github.com/dhimmel&apos;)
    data_source.setPublisherName(&apos;Daniel Himmelstein&apos;)
    data_source.addRight(&apos;use-share-modify&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q278487&apos;)
    data_source.addTheme(&apos;http://www.wikidata.org/entity/Q1122544&apos;)
    data_source.setLicense(&apos;http://creativecommons.org/licenses/by/4.0/&apos;)
    data_source.setHomepage(&apos;https://github.com/dhimmel/drugbank/blob/gh-pages/pubchem-map.ipynb&apos;)
    data_source.setVersion(&apos;1.0&apos;)


    #generate dataset distribution
    data_dist = DataResource(qname=graphURI, graph = data_source.toRDF())
    data_dist.setURI(&apos;https://raw.githubusercontent.com/dhimmel/drugbank/3e87872db5fca5ac427ce27464ab945c0ceb4ec6/data/mapping/pubchem.tsv&apos;)
    data_dist.setTitle(&apos;Pubchem mappings for Drugbank drugs (pubchem.tsv)&apos;)
    data_dist.setLicense(&apos;http://creativecommons.org/licenses/by/4.0/&apos;)
    data_dist.setVersion(&apos;1.0&apos;)
    data_dist.setFormat(&apos;text/tab-separated-value&apos;)
    data_dist.setMediaType(&apos;text/tab-separated-value&apos;)
    data_dist.setPublisher(&apos;https://github.com/dhimmel&apos;)
    data_dist.addRight(&apos;use-share-modify&apos;)
    data_dist.setRetrievedDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    data_dist.setDataset(data_source.getURI())

    #generate RDF data distrubtion
    rdf_dist = DataResource(qname=graphURI, graph = data_dist.toRDF() )
    rdf_dist.setURI(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/pubchem_mapping.nq.gz&apos;)
    rdf_dist.setTitle(&apos;RDF Version of the Pubchem mappings for Drugbank drugs&apos;)
    rdf_dist.setLicense(&apos;http://creativecommons.org/licenses/by/3.0/&apos;)
    rdf_dist.setVersion(&apos;1.0&apos;)
    rdf_dist.setFormat(&apos;application/n-quads&apos;)
    rdf_dist.setMediaType(&apos;application/n-quads&apos;)
    rdf_dist.addRight(&apos;use-share-modify&apos;)
    rdf_dist.addRight(&apos;by-attribution&apos;)
    rdf_dist.addRight(&apos;restricted-by-source-license&apos;)
    rdf_dist.setCreateDate(datetime.datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;))
    rdf_dist.setCreator(&apos;https://github.com/fair-workflows/openpredict/src/RDFConversionOfPubchemMapping.py&apos;)
    rdf_dist.setDownloadURL(&apos;https://github.com/fair-workflows/openpredict/blob/master/data/rdf/pubchem_mapping.nq.gz&apos;)
    rdf_dist.setDataset(data_dist.getURI())
      
    return rdf_dist.toRDF()


g = addMetaData(g, graphURI)

outfile =&apos;../data/rdf/pubchem_mapping.nq&apos;
g.serialize(outfile, format=&apos;nquads&apos;)
print(&apos;RDF is generated at &apos;+outfile)



</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_pubchem_to_drugbank"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_human_interactome_barabasi">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download human interactome barabasi</rdfs:label>
        <dc:description>Download human interactome barabasi</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download_Human_interactome_barabasi_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Download_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Download_phenotype_annotations">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Download phenotype annotations</rdfs:label>
        <dc:description>Download phenotype annotations</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:used rdf:resource="&opredict;Distribution_phenotype_annotation_hpoteam.tab_Build_1263"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Usage_Fetch_download-_phenotype_annotations_to_variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Execute_FAIRifier_process_to_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Execute_FAIRifier_process_to_human_interactome_barabasi">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Execute FAIRifier process to human interactome barabasi</rdfs:label>
        <dc:description>Execute FAIRifier process to human interactome barabasi</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Execute_FAIRifier_process_to_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Execute_FAIRifier_process_to_phenotype_annotations">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Execute FAIRifier process to phenotype annotations</rdfs:label>
        <dc:description>Execute FAIRifier process to phenotype annotations</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Execute_queries_and_create_input_files_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Execute_queries_and_create_input_files_tab">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Execute_query_DRUG_SMILES_from_DRUGBANK"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Execute_query_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Execute query DRUG SIDE EFFECTS from SIDER</rdfs:label>
        <dc:description>Execute query DRUG SIDE EFFECTS from SIDER</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;QueryExecution_DRUG_SIDE_EFFECTS_from_SIDER"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Execute_query_DRUG_SMILES_from_DRUGBANK -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Execute_query_DRUG_SMILES_from_DRUGBANK">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Execute query DRUG SMILES from DRUGBANK</rdfs:label>
        <dc:description>Execute query DRUG SMILES from DRUGBANK</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;QueryExecution_DRUG_SMILES_from_DRUGBANK"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Execute_query_DRUG_TARGETS_-from_DRUGBANK_and_KEGG -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Execute_query_DRUG_TARGETS_-from_DRUGBANK_and_KEGG">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Execute query DRUG TARGETS -from DRUGBANK and KEGG</rdfs:label>
        <dc:description>Execute query DRUG TARGETS -from DRUGBANK and KEGG</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;QueryExecution_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_OpenPREDICT_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_OpenPREDICT_Spec">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Specification of feature generation</rdfs:label>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_OpenPREDICT_ipynb -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_OpenPREDICT_ipynb">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Feature generation: Pipeline OpenPREDICT.ipynb</rdfs:label>
        <dc:description>Feature generation: Pipeline OpenPREDICT.ipynb</dc:description>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/975324eb5263bc0d5d709f833baca31952817844/FeatureGeneration.ipynb</dcat:downloadURL>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell00"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell00 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell00">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>import itertools
import math
import numpy as np
import pandas as pd</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_Pipeline_Source_Cell0_Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell01 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>drug_target = pd.read_csv(&apos;data/input/drugbank-drug-target.csv&apos;)
target_seq = pd.read_csv(&apos;data/input/drugbank-target-seq.csv&apos;)
drug_goa = pd.read_csv(&apos;data/input/drugbank-drug-goa.csv&apos;)
drug_smiles = pd.read_csv(&apos;data/input/drugbank-drug-smiles.csv&apos;)
drug_se = pd.read_csv(&apos;data/input/drugbank-sider-se.csv&apos;)
drug_smiles.head()</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <dc:description>Load input datasets</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>print (&quot;%d drugs have all Target feature &quot;%len(  drug_target.drugid.unique()))
print (&quot;%d drugs have Target GOA feature &quot;%len( drug_goa.drugid.unique()))
print (&quot;%d drugs have Fingerprint feature &quot;%len(  drug_smiles.drugid.unique()))
print (&quot;%d drugs have Sideeffect feature &quot;%len( drug_se.drugid.unique()))</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell03 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell03">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>drug_target_seq = drug_target.merge(target_seq, on= [&apos;geneid&apos;])
print (&quot;%d drugs have Target SEQ feature &quot;%len( drug_target_seq.drugid.unique()))</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell04 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell04">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>a=drug_goa[&apos;drugid&apos;].unique()
b=drug_target[&apos;drugid&apos;].unique()
c=drug_smiles[&apos;drugid&apos;].unique()
d=drug_se[&apos;drugid&apos;].unique()
commonDrugs= set(a).intersection(b).intersection(c).intersection(d)
print (len(a),len(b),len(c),len(d))
print (len(commonDrugs))</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell05 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell05">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>drug_se.head()</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell06 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># ## Drug side effect similarity¶
# ## calculating Jaccard coefficient based on drug sideefects

drugSEDict = {k: g[&quot;umlsid&quot;].tolist() for k,g in drug_se.groupby(&quot;drugid&quot;)}
scores = []

for comb in itertools.combinations(commonDrugs,2):
    drug1 =comb[0]
    drug2 =comb[1]

    sideeffects1 = drugSEDict[drug1]
    sideeffects2 = drugSEDict[drug2]
    c = set(sideeffects1).intersection(sideeffects2)
    u = set(sideeffects1).union(sideeffects2)
    score = len(c)/float(len(u))
    scores.append([drug1, drug2, score])</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <dc:description>Calculate scores between pairs of drugs and compute similarity feature</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell07 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell07">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>drug_se_df = pd.DataFrame(scores, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;SE-SIM&apos;])</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell08 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell08">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>drug_se_df.head()</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell09 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell09">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>drug_se_df.to_csv(&apos;data/features/drugs-se-sim.csv&apos;, index=False)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell10 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell10">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># ## PPI based drug-drug similarity
# ###  calculate distance between drugs on protein-protein interaction network
#!pip install -q networkx==1.11

# calcuate pairwise distance between proteins in the human PPI network
import networkx as nx
G= nx.Graph()
with open(&apos;data/input/human-interactome.csv&apos;) as ppiFile: # human PPI network
    next(ppiFile) # skip first line
    drugs=set()
    for line in ppiFile:
        line=line.replace(&quot;&apos;&quot;,&quot;&quot;).strip().split(&apos;,&apos;)
        G.add_edge(line[0],line[1])

ppi=nx.shortest_path_length(G)

def grapDistance(ppi, target1, target2):
    &quot;&quot;&quot;
    return the shortest path between two proteins in the PPI network
    ppi : dictonary that contains distance of PPI 
    target1 : first protein name
    target2 : second protein name
    &quot;&quot;&quot;
    maxValue = 9999
    if target1 not in ppi:
        return maxValue
    else:
        if target2 not in ppi[target1]:
            return maxValue
        else:
            return ppi[target1][target2]

drug_targetlist = {k: g[&quot;geneid&quot;].tolist() for k,g in drug_target.groupby(&quot;drugid&quot;)}
values = []

# calculate PPI-based pairwise drug similarity (Closeness)
# First distances between proteins were transformed to similarity values using the formula described in Perlman et al (2011)
# A, b were chosen according to Perlman et al (2011) to be 0.9 × e and 1, respectively.
# Self similarity was assigned a value of 1.

# For drugs similarities, maximal values between the two lists of associated genes were averaged 
# (taking into account both sides for symmetry).

A = 0.9
b = 1
for comb in itertools.combinations(commonDrugs,2) :
    drug1 = comb[0]
    drug2 = comb[1]
    targetList1 = drug_targetlist[drug1]
    targetList2 = drug_targetlist[drug2]
    allscores =[]
    for target1 in sorted(targetList1):
        genescores = []
        for target2 in sorted(targetList2):
            target1 =str(target1)
            target2 =str(target2)    
            if target1 == target2:
                score=1.0
            else:
                score = A*math.exp(-b* grapDistance(ppi, target1, target2))
            genescores.append(score)
    # add maximal values between the two lists of associated genes 
    allscores.append(max(genescores))
    if len(allscores) ==0: continue
    #average the maximal scores 
    maxScore =np.mean(allscores)
    if maxScore &gt;= 0:
        values.append([drug1, drug2, maxScore])

drug_ppi_df = pd.DataFrame(values, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;PPI-SIM&apos;])

drug_ppi_df.head()

drug_ppi_df.to_csv(&apos;data/features/drugs-ppi-sim.csv&apos;, index=False)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell10_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell10_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell10_Spec">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <dc:description>Install NetworkX version 1.11</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell11 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell11">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>## Drug fingerprint similarity
### calculating MACS based fingerprint (substructure) similarity

# install following packages oddt and openbabel using conda
#!conda install -c oddt oddt
#!conda install -c openbabel openbabel

from oddt import toolkit
from oddt import fingerprints

import pandas as pd
import numpy as np
import itertools

drug_smiles = drug_smiles[drug_smiles.drugid.isin(commonDrugs)]
drug_smiles.head()

drug_smiles.head()

#Create a dictionary of chemicals to be compared:
input_dict = dict()
for index,line in drug_smiles.iterrows():
    id = line[&apos;drugid&apos;]
    
    smiles = line[&apos;smiles&apos;]
    mol = toolkit.readstring(format=&apos;smiles&apos;,string=smiles)
    fp =mol.calcfp(fptype=&apos;MACCS&apos;).raw
    input_dict[id] = fp

def tanimoto_score(fp1, fp2):
    return np.sum(fp1 &amp;  fp2) / np.sum(fp1 | fp2)

sim_values=[]
for chemical1, chemical2 in itertools.combinations(input_dict.keys(),2):
    TC= tanimoto_score(input_dict[chemical1], input_dict[chemical2])
    if chemical1 != chemical2:
        sim_values.append([chemical1, chemical2, TC])

chem_sim_df = pd.DataFrame(sim_values, columns=[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;TC&apos;])
chem_sim_df.head()

chem_sim_df.to_csv(&apos;data/features/drugs-fingerprint-sim.csv&apos;, index=False)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell12 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell12">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>## Drug target sequence similarity
### Calculation of SmithWaterman sequence alignment scores

def fasta2seq(lines):
    lines = lines[lines.index(&apos;\n&apos;)+1:]
    lines =lines.replace(&apos;\n&apos;,&apos;&apos;)
    return lines

target_seq.seq =target_seq.seq.map(fasta2seq)
target_seq = target_seq[target_seq.geneid.isin(drug_target.geneid)]

target_seq.head()

target_seq_file=&quot;data/intermediate/drugbank-target-seq-trimmed.tab&quot;
target_seq.to_csv(target_seq_file,&apos;\t&apos;,index=False,header=None)

target_seq_file=&quot;data/intermediate/drugbank-target-seq-trimmed.tab&quot;
target_seq_sim_file=&quot;data/intermediate/target-target-seq-sim-biojava.tab&quot;

!java -cp .:lib/smithwaterman.jar:lib/biojava-alignment-4.0.0.jar:lib/biojava-core-4.0.0.jar:lib/slf4j-api-1.7.10.jar biojava.targetseq.CalcLocalAlign {target_seq_file} &gt; {target_seq_sim_file}

targetSeqSim=dict()
target_seq_sim_file=&quot;data/intermediate/target-target-seq-sim-biojava.tab&quot;
with open(target_seq_sim_file) as tarSimfile:
    for row in tarSimfile:
        row = row.strip().split(&quot;\t&quot;)
        t1 =row[0]
        t2 = row[1]
        sim = float(row[2])
        targetSeqSim[(t1,t2)]=sim
        targetSeqSim[(t2,t1)]=sim

drug_targetlist = {k: g[&quot;geneid&quot;].tolist() for k,g in drug_target_seq.groupby(&quot;drugid&quot;)}
values = []

for comb in itertools.combinations(commonDrugs,2) :
    drug1 = comb[0]
    drug2 = comb[1]
    targetList1 = drug_targetlist[drug1]
    targetList2 = drug_targetlist[drug2]
    allscores =[]
    for target1 in sorted(targetList1):
        genescores = []
        for target2 in sorted(targetList2):
            target1 =str(target1)
            target2 =str(target2)    
            if target1 == target2:
                score=1.0
            else:
                score = targetSeqSim[(target1,target2)] / (math.sqrt(targetSeqSim[(target1,target1)]) * math.sqrt(targetSeqSim[(target2,target2)]))
            genescores.append(score)
    # add maximal values between the two lists of associated genes 
    allscores.append(max(genescores))
    if len(allscores) ==0: continue
    #average the maximal scores 
    maxScore =np.mean(allscores)
    values.append([drug1, drug2, maxScore])

drug_seq_df = pd.DataFrame(values, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;TARGETSEQ-SIM&apos;])

drug_seq_df.head()

drug_seq_df.to_csv(&apos;data/features/drugs-target-seq-sim.csv&apos;, index=False)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell13 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell13">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>## GO based drug-drug similarity

drug_goa.drugid = drug_goa.drugid.map(lambda d: &apos;http://purl.obolibrary.org/obo/&apos;+d)
drug_goa.to_csv(&apos;data/intermediate/drug_goa.txt&apos;,sep=&apos;\t&apos;, header=False, index=False)

#cleaning GO annotations
rows = []
for comb in itertools.combinations(commonDrugs,2):
    t1=comb[0]
    t2=comb[1]
    rows.append([&apos;http://purl.obolibrary.org/obo/&apos;+str(t1),&apos;http://purl.obolibrary.org/obo/&apos;+str(t2)])

drug_query_df = pd.DataFrame(rows, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;])
drug_query_df.to_csv(&apos;data/intermediate/drug.gene.go.query&apos;,sep=&apos;\t&apos;, header=False, index=False)

### run the semantic relatedness library with given query and anotation file it will produce a file named: gene.go.sim.out
!java -jar lib/sml-toolkit-0.9.jar -t sm -xmlconf data/conf/sml.gene.go.conf

go_sim_df = pd.read_csv(&apos;data/intermediate/drug.gene.go.sim.out&apos;,sep=&apos;\t&apos;)
go_sim_df.head()

go_sim_df.rename(columns={&apos;e1&apos;:&apos;Drug1&apos;,&apos;e2&apos;:&apos;Drug2&apos;,&apos;bma&apos;:&apos;GO-SIM&apos;}, inplace=True)

go_sim_df.Drug1 = go_sim_df.Drug1.str.replace(&apos;http://purl.obolibrary.org/obo/&apos;,&apos;&apos;)
go_sim_df.Drug2 = go_sim_df.Drug2.str.replace(&apos;http://purl.obolibrary.org/obo/&apos;,&apos;&apos;)
go_sim_df.head()

go_sim_df.to_csv(&apos;data/features/drugs-target-go-sim.csv&apos;)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell14 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell14">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>## Disease Phenotype Similarity
### MESH term based Similarity

predict_df = pd.read_csv(&apos;data/input/openpredict-omim-drug.csv&apos;)
predict_df.head()

predict_df.rename(columns={&apos;drugid&apos;:&apos;Drug&apos;,&apos;omimid&apos;:&apos;Disease&apos;}, inplace=True)

gold_diseases = set( predict_df.Disease.unique())
print (&apos;Gold std. diseases&apos;,len(gold_diseases))

mesh_ann = {}
allmeshterm = []
with open(&apos;data/input/omim-disease-mesh.csv&apos;) as meshfile:
    next(meshfile)
    for line in meshfile:
        line = line.strip().split(&apos;,&apos;)
        if len(line) != 2: continue
        di = line[0]
        mesh = line[1].split(&apos;,&apos;)
        mesh_ann[di]=mesh
        allmeshterm.extend(mesh)

vocabulary = list(set(allmeshterm))
len(vocabulary)

# create a co-occurrence matrix
co_mat = np.zeros((len(mesh_ann),len(vocabulary)))

commonDiseases = mesh_ann.keys()
mesh2id= { di:i for i,di in enumerate(mesh_ann.keys())}
# fill in the co-occurrence matrix
for key in mesh_ann:
    annotations = mesh_ann[key]
    col_index = [vocabulary.index(a) for a in annotations]
    co_mat[mesh2id[key],col_index] =1

def cosine_similarity(a,b):
    return  np.dot(a, b)/(np.linalg.norm(a)*np.linalg.norm(b))

values = []
for comb in itertools.combinations(commonDiseases,2) :
    disease1 = comb[0]
    disease2 = comb[1]
    sim = cosine_similarity(co_mat[mesh2id[disease1],:], co_mat[mesh2id[disease2],:])
    values.append([disease1, disease2, sim])

disease_pheno_df = pd.DataFrame(values, columns =[&apos;Disease1&apos;,&apos;Disease2&apos;,&apos;PHENO-SIM&apos;])

disease_pheno_df.head()

disease_pheno_df.to_csv(&apos;data/features/diseases-pheno-sim.csv&apos;,index=False)
</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_01_Pipeline_Source_Cell15 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell15">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description>## HPO based disease-disease similarity

# reading the hpo annotation file taken from compbio.charite.de/jennkins/jobs/hpo.annotations/
disease_hpo = pd.read_csv(&apos;data/input/omim-disease-hpo.csv&apos;)
disease_hpo.head()

disease_hpo.rename(columns={&apos;diseaseid&apos;:&apos;Disease&apos;,&apos;hpoid&apos;:&apos;HPO&apos;}, inplace=True)
disease_hpo.HPO= disease_hpo.HPO.str.replace(&apos;hpo&apos;,&apos;hp&apos;)

#disease_hpo[&quot;Disease&quot;] = disease_hpo[&quot;Disease&quot;].astype(str)

disease_hpo.head()

#gold_diseases = set(gold_ind_dc[&quot;OMIMID&quot;].unique()).union(gold_ind_sider[&quot;OMIMID&quot;].unique()).union(gold_ind.Disease.unique())
diseasesWithFeatures= set(disease_hpo.Disease.unique()).intersection( gold_diseases )
print (len(diseasesWithFeatures))
rows = []
for comb in itertools.combinations(diseasesWithFeatures,2):
    t1=comb[0]
    t2=comb[1]
    rows.append([&apos;omim:&apos;+str(t1),&apos;omim:&apos;+str(t2)])

disease_hpo[&quot;Disease&quot;]=disease_hpo[&quot;Disease&quot;].map(lambda d: &apos;omim:&apos;+str(d))
disease_hpo.to_csv(&apos;data/intermediate/disease_hpo.txt&apos;,sep=&apos;\t&apos;, header=False, index=False)

disease_query_df = pd.DataFrame(rows, columns =[&apos;Disease1&apos;,&apos;Disease2&apos;])
disease_query_df.to_csv(&apos;data/intermediate/hpo.sml.omim.query&apos;,sep=&apos;\t&apos;, header=False, index=False)

### run the semantic relatedness library with given query and anotation file it will produce a file named: hpo.sim.out
!java -jar lib/sml-toolkit-0.9.jar -t sm -xmlconf data/conf/sml.omim.hpo.conf

hpo_sim_df = pd.read_csv(&apos;data/intermediate/omim.hpo.sim.out&apos;,sep=&apos;\t&apos;)

hpo_sim_df.head()

hpo_sim_df.rename(columns={&apos;e1&apos;:&apos;Disease1&apos;,&apos;e2&apos;:&apos;Disease2&apos;,&apos;bma&apos;:&apos;HPO-SIM&apos;}, inplace=True)

hpo_sim_df.Disease1 = hpo_sim_df.Disease1.str.replace(&apos;omim:&apos;,&apos;&apos;)
hpo_sim_df.Disease2 = hpo_sim_df.Disease2.str.replace(&apos;omim:&apos;,&apos;&apos;)
hpo_sim_df.head()

hpo_sim_df.to_csv(&apos;data/features/diseases-hpo-sim.csv&apos;, index=False)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Feature generation: Download and Save Input.ipynb and FeatureGeneration.ipynb</rdfs:label>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_Download_and_Save_Input"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_Download_and_Save_Input -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_Download_and_Save_Input">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Download and Save Input Data

sparql_endpoint=&quot;https://graphdb.dumontierlab.com/repositories/openpredict&quot;
!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/drugbank-drug-target.rq {sparql_endpoint} &gt; data/input/drugbank-drug-target.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/drugbank-target-seq.rq {sparql_endpoint} &gt; data/input/drugbank-target-seq.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/drugbank-drug-smiles.rq {sparql_endpoint} &gt; data/input/drugbank-drug-smiles.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/drugbank-drug-goa.rq {sparql_endpoint} &gt; data/input/drugbank-drug-goa.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/drugbank-sider-sideeffects.rq {sparql_endpoint} &gt; data/input/drugbank-sider-se.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/openpredict-omim-drug.rq {sparql_endpoint} &gt; data/input/openpredict-omim-drug.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/human-interactome.rq {sparql_endpoint} &gt; data/input/human-interactome.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/omim-disease-mesh.rq {sparql_endpoint} &gt; data/input/omim-disease-mesh.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/omim-disease-hpo.rq {sparql_endpoint} &gt; data/input/omim-disease-hpo.csv

!curl -H &quot;Accept: text/csv&quot; --data-urlencode query@data/sparql/drugbank-drug-synonym.rq {sparql_endpoint} &gt; data/input/drugbank-drug-synonym.csv

# Create Feature Matrix

import pandas as pd
drug_target = pd.read_csv(&apos;data/input/drugbank-drug-target.csv&apos;)
target_seq = pd.read_csv(&apos;data/input/drugbank-target-seq.csv&apos;)
drug_goa = pd.read_csv(&apos;data/input/drugbank-drug-goa.csv&apos;)
drug_smiles = pd.read_csv(&apos;data/input/drugbank-drug-smiles.csv&apos;)
drug_se = pd.read_csv(&apos;data/input/drugbank-sider-se.csv&apos;)
drug_smiles.head()

target_seq.head()

drug_se.head()

drug_goa.head()

a=drug_goa[&apos;drugid&apos;].unique()
b=drug_target[&apos;drugid&apos;].unique()
c=drug_smiles[&apos;drugid&apos;].unique()
d=drug_se[&apos;drugid&apos;].unique()
commonDrugs= set(a).intersection(b).intersection(c).intersection(d)
print (len(a),len(b),len(c),len(d))
print (len(commonDrugs))

gold_ind =pd.read_csv(&apos;data/input/openpredict-omim-drug.csv&apos;)
gold_ind.head()

gold_ind.rename(columns={&apos;drugid&apos;:&apos;Drug&apos;,&apos;omimid&apos;:&apos;Disease&apos;}, inplace=True)

print (&quot;%d drugs have all features &quot;%len( commonDrugs.intersection( gold_ind.Drug.unique())))
print (&quot;%d drugs have GOA feature &quot;%len( set(a).intersection( gold_ind.Drug.unique())))
print (&quot;%d drugs have Target feature &quot;%len( set(b).intersection( gold_ind.Drug.unique())))
print (&quot;%d drugs have Fingerprint feature &quot;%len( set(c).intersection( gold_ind.Drug.unique())))
print (&quot;%d drugs have Sideeffect feature &quot;%len( set(d).intersection( gold_ind.Drug.unique())))

disease_hpo = pd.read_csv(&apos;data/input/omim-disease-hpo.csv&apos;)
disease_mesh = pd.read_csv(&apos;data/input/omim-disease-mesh.csv&apos;)

dis1 = disease_mesh[&apos;diseaseid&apos;].unique()
dis2 = disease_hpo[&apos;diseaseid&apos;].unique()

disease_mesh.head()

commonDiseases = set(dis1).intersection(dis2)
print (&quot;%d drugs that have all features &quot;%len( commonDiseases.intersection( gold_ind.Disease.unique())))
print (&quot;%d drugs that have MESH feature &quot;%len( set(dis1).intersection( gold_ind.Disease.unique())))
print (&quot;%d drugs that have HPO feature &quot;%len( set(dis2).intersection( gold_ind.Disease.unique())))</dc:description>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/975324eb5263bc0d5d709f833baca31952817844/Download%20and%20Save%20Input.ipynb</dcat:downloadURL>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/74d3d7ae2b3182c071f490e8353d5dfdbf9f3f08/FeatureGeneration.ipynb</dcat:downloadURL>
        <dc:description>import itertools
import math
import numpy as np
import pandas as pd

drug_target = pd.read_csv(&apos;data/input/drugbank-drug-target.csv&apos;)
target_seq = pd.read_csv(&apos;data/input/drugbank-target-seq.csv&apos;)
drug_goa = pd.read_csv(&apos;data/input/drugbank-drug-goa.csv&apos;)
drug_smiles = pd.read_csv(&apos;data/input/drugbank-drug-smiles.csv&apos;)
drug_se = pd.read_csv(&apos;data/input/drugbank-sider-se.csv&apos;)
drug_smiles.head()

## Get the drug data

print (&quot;%d drugs have all Target feature &quot;%len(  drug_target.drugid.unique()))
print (&quot;%d drugs have Target GOA feature &quot;%len( drug_goa.drugid.unique()))
print (&quot;%d drugs have Fingerprint feature &quot;%len(  drug_smiles.drugid.unique()))
print (&quot;%d drugs have Sideeffect feature &quot;%len( drug_se.drugid.unique()))

drug_target_seq = drug_target.merge(target_seq, on= [&apos;geneid&apos;])
print (&quot;%d drugs have Target SEQ feature &quot;%len( drug_target_seq.drugid.unique()))

a=drug_goa[&apos;drugid&apos;].unique()
b=drug_target[&apos;drugid&apos;].unique()
c=drug_smiles[&apos;drugid&apos;].unique()
d=drug_se[&apos;drugid&apos;].unique()
commonDrugs= set(a).intersection(b).intersection(c).intersection(d)
print (len(a),len(b),len(c),len(d))
print (len(commonDrugs))

drug_se.head()

## Drug side effect similarity
## calculating Jaccard coefficient based on drug sideefects

drugSEDict = {k: g[&quot;umlsid&quot;].tolist() for k,g in drug_se.groupby(&quot;drugid&quot;)}
scores = []

for comb in itertools.combinations(commonDrugs,2):
    drug1 =comb[0]
    drug2 =comb[1]

    sideeffects1 = drugSEDict[drug1]
    sideeffects2 = drugSEDict[drug2]
    c = set(sideeffects1).intersection(sideeffects2)
    u = set(sideeffects1).union(sideeffects2)
    score = len(c)/float(len(u))
    scores.append([drug1, drug2, score])

drug_se_df = pd.DataFrame(scores, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;SE-SIM&apos;])

drug_se_df.head()

drug_se_df.to_csv(&apos;data/features/drugs-se-sim.csv&apos;, index=False)

## PPI based drug-drug similarity
###  calculate distance between drugs on protein-protein interaction network

#!pip install -q networkx==1.11

# calcuate pairwise distance between proteins in the human PPI network
import networkx as nx
G= nx.Graph()
with open(&apos;data/input/human-interactome.csv&apos;) as ppiFile: # human PPI network
    next(ppiFile) # skip first line
    drugs=set()
    for line in ppiFile:
        line=line.replace(&quot;&apos;&quot;,&quot;&quot;).strip().split(&apos;,&apos;)
        G.add_edge(line[0],line[1])

ppi=nx.shortest_path_length(G)

def grapDistance(ppi, target1, target2):
    &quot;&quot;&quot;
    return the shortest path between two proteins in the PPI network
    ppi : dictonary that contains distance of PPI 
    target1 : first protein name
    target2 : second protein name
    &quot;&quot;&quot;
    maxValue = 9999
    if target1 not in ppi:
        return maxValue
    else:
        if target2 not in ppi[target1]:
            return maxValue
        else:
            return ppi[target1][target2]

drug_targetlist = {k: g[&quot;geneid&quot;].tolist() for k,g in drug_target.groupby(&quot;drugid&quot;)}
values = []

# calculate PPI-based pairwise drug similarity (Closeness)
# First distances between proteins were transformed to similarity values using the formula described in Perlman et al (2011)
# A, b were chosen according to Perlman et al (2011) to be 0.9 × e and 1, respectively.
# Self similarity was assigned a value of 1.

# For drugs similarities, maximal values between the two lists of associated genes were averaged 
# (taking into account both sides for symmetry).

A = 0.9
b = 1
for comb in itertools.combinations(commonDrugs,2) :
    drug1 = comb[0]
    drug2 = comb[1]
    targetList1 = drug_targetlist[drug1]
    targetList2 = drug_targetlist[drug2]
    allscores =[]
    for target1 in sorted(targetList1):
        genescores = []
        for target2 in sorted(targetList2):
            target1 =str(target1)
            target2 =str(target2)    
            if target1 == target2:
                score=1.0
            else:
                score = A*math.exp(-b* grapDistance(ppi, target1, target2))
            genescores.append(score)
    # add maximal values between the two lists of associated genes 
    allscores.append(max(genescores))
    if len(allscores) ==0: continue
    #average the maximal scores 
    maxScore =np.mean(allscores)
    if maxScore &gt;= 0:
        values.append([drug1, drug2, maxScore])

drug_ppi_df = pd.DataFrame(values, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;PPI-SIM&apos;])

drug_ppi_df.head()

drug_ppi_df.to_csv(&apos;data/features/drugs-ppi-sim.csv&apos;, index=False)

##Drug fingerprint similarity
###calculating MACS based fingerprint (substructure) similarity

# install following packages oddt and openbabel using conda
#!conda install -c oddt oddt
#!conda install -c openbabel openbabel

from oddt import toolkit
from oddt import fingerprints

import pandas as pd
import numpy as np
import itertools

drug_smiles = drug_smiles[drug_smiles.drugid.isin(commonDrugs)]
drug_smiles.head()

drug_smiles.head()

#Create a dictionary of chemicals to be compared:
input_dict = dict()
for index,line in drug_smiles.iterrows():
    id = line[&apos;drugid&apos;]
    
    smiles = line[&apos;smiles&apos;]
    mol = toolkit.readstring(format=&apos;smiles&apos;,string=smiles)
    fp =mol.calcfp(fptype=&apos;MACCS&apos;).raw
    input_dict[id] = fp

def tanimoto_score(fp1, fp2):
    return np.sum(fp1 &amp;  fp2) / np.sum(fp1 | fp2)

sim_values=[]
for chemical1, chemical2 in itertools.combinations(input_dict.keys(),2):
    TC= tanimoto_score(input_dict[chemical1], input_dict[chemical2])
    if chemical1 != chemical2:
        sim_values.append([chemical1, chemical2, TC])

chem_sim_df = pd.DataFrame(sim_values, columns=[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;TC&apos;])
chem_sim_df.head()

chem_sim_df.to_csv(&apos;data/features/drugs-fingerprint-sim.csv&apos;, index=False)

##Drug target sequence similarity
###Calculation of SmithWaterman sequence alignment scores

def fasta2seq(lines):
    lines = lines[lines.index(&apos;\n&apos;)+1:]
    lines =lines.replace(&apos;\n&apos;,&apos;&apos;)
    return lines

target_seq.seq =target_seq.seq.map(fasta2seq)
target_seq = target_seq[target_seq.geneid.isin(drug_target.geneid)]

target_seq.head()

target_seq_file=&quot;data/intermediate/drugbank-target-seq-trimmed.tab&quot;
target_seq.to_csv(target_seq_file,&apos;\t&apos;,index=False,header=None)

target_seq_file=&quot;data/intermediate/drugbank-target-seq-trimmed.tab&quot;
target_seq_sim_file=&quot;data/intermediate/target-target-seq-sim-biojava.tab&quot;

!java -cp .:lib/smithwaterman.jar:lib/biojava-alignment-4.0.0.jar:lib/biojava-core-4.0.0.jar:lib/slf4j-api-1.7.10.jar biojava.targetseq.CalcLocalAlign {target_seq_file} &gt; {target_seq_sim_file}

targetSeqSim=dict()
target_seq_sim_file=&quot;data/intermediate/target-target-seq-sim-biojava.tab&quot;
with open(target_seq_sim_file) as tarSimfile:
    for row in tarSimfile:
        row = row.strip().split(&quot;\t&quot;)
        t1 =row[0]
        t2 = row[1]
        sim = float(row[2])
        targetSeqSim[(t1,t2)]=sim
        targetSeqSim[(t2,t1)]=sim

drug_targetlist = {k: g[&quot;geneid&quot;].tolist() for k,g in drug_target_seq.groupby(&quot;drugid&quot;)}
values = []

for comb in itertools.combinations(commonDrugs,2) :
    drug1 = comb[0]
    drug2 = comb[1]
    targetList1 = drug_targetlist[drug1]
    targetList2 = drug_targetlist[drug2]
    allscores =[]
    for target1 in sorted(targetList1):
        genescores = []
        for target2 in sorted(targetList2):
            target1 =str(target1)
            target2 =str(target2)    
            if target1 == target2:
                score=1.0
            else:
                score = targetSeqSim[(target1,target2)] / (math.sqrt(targetSeqSim[(target1,target1)]) * math.sqrt(targetSeqSim[(target2,target2)]))
            genescores.append(score)
    # add maximal values between the two lists of associated genes 
    allscores.append(max(genescores))
    if len(allscores) ==0: continue
    #average the maximal scores 
    maxScore =np.mean(allscores)
    values.append([drug1, drug2, maxScore])

drug_seq_df = pd.DataFrame(values, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;,&apos;TARGETSEQ-SIM&apos;])

drug_seq_df.head()

drug_seq_df.to_csv(&apos;data/features/drugs-target-seq-sim.csv&apos;, index=False)

##GO based drug-drug similarity

drug_goa.drugid = drug_goa.drugid.map(lambda d: &apos;http://purl.obolibrary.org/obo/&apos;+d)
drug_goa.to_csv(&apos;data/intermediate/drug_goa.txt&apos;,sep=&apos;\t&apos;, header=False, index=False)

#cleaning GO annotations
rows = []
for comb in itertools.combinations(commonDrugs,2):
    t1=comb[0]
    t2=comb[1]
    rows.append([&apos;http://purl.obolibrary.org/obo/&apos;+str(t1),&apos;http://purl.obolibrary.org/obo/&apos;+str(t2)])

drug_query_df = pd.DataFrame(rows, columns =[&apos;Drug1&apos;,&apos;Drug2&apos;])
drug_query_df.to_csv(&apos;data/intermediate/drug.gene.go.query&apos;,sep=&apos;\t&apos;, header=False, index=False)

### run the semantic relatedness library with given query and anotation file it will produce a file named: gene.go.sim.out
!java -jar lib/sml-toolkit-0.9.jar -t sm -xmlconf data/conf/sml.gene.go.conf

go_sim_df = pd.read_csv(&apos;data/intermediate/drug.gene.go.sim.out&apos;,sep=&apos;\t&apos;)
go_sim_df.head()

go_sim_df.rename(columns={&apos;e1&apos;:&apos;Drug1&apos;,&apos;e2&apos;:&apos;Drug2&apos;,&apos;bma&apos;:&apos;GO-SIM&apos;}, inplace=True)

go_sim_df.Drug1 = go_sim_df.Drug1.str.replace(&apos;http://purl.obolibrary.org/obo/&apos;,&apos;&apos;)
go_sim_df.Drug2 = go_sim_df.Drug2.str.replace(&apos;http://purl.obolibrary.org/obo/&apos;,&apos;&apos;)
go_sim_df.head()

go_sim_df.to_csv(&apos;data/features/drugs-target-go-sim.csv&apos;)

##Disease Phenotype Similarity
###MESH term based Similarity

predict_df = pd.read_csv(&apos;data/input/openpredict-omim-drug.csv&apos;)
predict_df.head()

predict_df.rename(columns={&apos;drugid&apos;:&apos;Drug&apos;,&apos;omimid&apos;:&apos;Disease&apos;}, inplace=True)

gold_diseases = set( predict_df.Disease.unique())
print (&apos;Gold std. diseases&apos;,len(gold_diseases))

mesh_ann = {}
allmeshterm = []
with open(&apos;data/input/omim-disease-mesh.csv&apos;) as meshfile:
    next(meshfile)
    for line in meshfile:
        line = line.strip().split(&apos;,&apos;)
        if len(line) != 2: continue
        di = line[0]
        mesh = line[1].split(&apos;,&apos;)
        mesh_ann[di]=mesh
        allmeshterm.extend(mesh)

vocabulary = list(set(allmeshterm))
len(vocabulary)

# create a co-occurrence matrix
co_mat = np.zeros((len(mesh_ann),len(vocabulary)))

commonDiseases = mesh_ann.keys()
mesh2id= { di:i for i,di in enumerate(mesh_ann.keys())}
# fill in the co-occurrence matrix
for key in mesh_ann:
    annotations = mesh_ann[key]
    col_index = [vocabulary.index(a) for a in annotations]
    co_mat[mesh2id[key],col_index] =1

def cosine_similarity(a,b):
    return  np.dot(a, b)/(np.linalg.norm(a)*np.linalg.norm(b))

values = []
# calculate cosine similarity between diseases using mesh annotation vector
for comb in itertools.combinations(commonDiseases,2) :
    disease1 = comb[0]
    disease2 = comb[1]
    sim = cosine_similarity(co_mat[mesh2id[disease1],:], co_mat[mesh2id[disease2],:])
    values.append([disease1, disease2, sim])

disease_pheno_df = pd.DataFrame(values, columns =[&apos;Disease1&apos;,&apos;Disease2&apos;,&apos;PHENO-SIM&apos;])

disease_pheno_df.head()

disease_pheno_df.to_csv(&apos;data/features/diseases-pheno-sim.csv&apos;,index=False)

##HPO based disease-disease similarity

# reading the hpo annotation file taken from compbio.charite.de/jennkins/jobs/hpo.annotations/
disease_hpo = pd.read_csv(&apos;data/input/omim-disease-hpo.csv&apos;)
disease_hpo.head()

disease_hpo.rename(columns={&apos;diseaseid&apos;:&apos;Disease&apos;,&apos;hpoid&apos;:&apos;HPO&apos;}, inplace=True)
disease_hpo.HPO= disease_hpo.HPO.str.replace(&apos;hpo&apos;,&apos;hp&apos;)

disease_hpo.head()

diseasesWithFeatures= set(disease_hpo.Disease.unique()).intersection( gold_diseases )
print (len(diseasesWithFeatures))
rows = []
for comb in itertools.combinations(diseasesWithFeatures,2):
    t1=comb[0]
    t2=comb[1]
    rows.append([&apos;omim:&apos;+str(t1),&apos;omim:&apos;+str(t2)])

disease_hpo[&quot;Disease&quot;]=disease_hpo[&quot;Disease&quot;].map(lambda d: &apos;omim:&apos;+str(d))
disease_hpo.to_csv(&apos;data/intermediate/disease_hpo.txt&apos;,sep=&apos;\t&apos;, header=False, index=False)

disease_query_df = pd.DataFrame(rows, columns =[&apos;Disease1&apos;,&apos;Disease2&apos;])
disease_query_df.to_csv(&apos;data/intermediate/hpo.sml.omim.query&apos;,sep=&apos;\t&apos;, header=False, index=False)

### run the semantic relatedness library with given query and anotation file it will produce a file named: hpo.sim.out
!java -jar lib/sml-toolkit-0.9.jar -t sm -xmlconf data/conf/sml.omim.hpo.conf

hpo_sim_df = pd.read_csv(&apos;data/intermediate/omim.hpo.sim.out&apos;,sep=&apos;\t&apos;)

hpo_sim_df.head()

hpo_sim_df.rename(columns={&apos;e1&apos;:&apos;Disease1&apos;,&apos;e2&apos;:&apos;Disease2&apos;,&apos;bma&apos;:&apos;HPO-SIM&apos;}, inplace=True)

hpo_sim_df.Disease1 = hpo_sim_df.Disease1.str.replace(&apos;omim:&apos;,&apos;&apos;)
hpo_sim_df.Disease2 = hpo_sim_df.Disease2.str.replace(&apos;omim:&apos;,&apos;&apos;)
hpo_sim_df.head()

hpo_sim_df.to_csv(&apos;data/features/diseases-hpo-sim.csv&apos;, index=False)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Format_results_for_presentation -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Format_results_for_presentation">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Format results for presentation</rdfs:label>
        <dc:description>Format results for presentation</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Main_Protocol_v01 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Main_Protocol_v01">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&dul;Workflow"/>
        <rdfs:label>Main Protocol v.0.1</rdfs:label>
        <dc:modified>2019-05-15</dc:modified>
        <dc:hasVersion>0.1</dc:hasVersion>
        <dc:created>2018-11-27</dc:created>
        <dc:description>OpenPREDICT Main Protocol v.0.1</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:wasAttributedTo rdf:resource="&opredict;Agent_Remzi"/>
        <dc:creator rdf:resource="&opredict;Agent_Remzi"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Prepare_Input_Data_Files"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Main_Protocol_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Main_Protocol_v02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&dul;Workflow"/>
        <rdfs:label>Main Protocol v.0.2</rdfs:label>
        <dc:created>2019-05-15</dc:created>
        <dc:modified>2019-07-03</dc:modified>
        <dc:description>OpenPREDICT Main Protocol v.0.2</dc:description>
        <dc:hasVersion>0.2</dc:hasVersion>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <dc:creator rdf:resource="&opredict;Agent_Remzi"/>
        <prov:wasAttributedTo rdf:resource="&opredict;Agent_Remzi"/>
        <prov:wasRevisionOf rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Prepare_Input_Data_Files_v02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Model preparation, train and evaluation Workflow: OpenPREDCIT - ML.ipynb</rdfs:label>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/f60431d37cf3ac80e5245ded143f03f368017489/OpenPREDCIT%20-%20ML.ipynb</dcat:downloadURL>
        <dc:description>Model preparation, train and evaluation Workflow: OpenPREDCIT - ML.ipynb</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell00"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell00 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell00">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <rdfs:label>Jupyter Notebook Cell00</rdfs:label>
        <dc:description>import random
import numpy as np
from sklearn import model_selection
from sklearn.model_selection import GroupKFold
import pandas as pd
import math
import time</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_Pipeline_Source_Cell0_Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Get the features and gold standard 

drugfeatfiles = [&apos;features/drugs-fingerprint-sim.txt&apos;,&apos;features/drugs-se-sim.txt&apos;, 
                 &apos;features/drugs-ppi-sim.txt&apos;, &apos;features/drugs-target-go-sim.txt&apos;,&apos;features/drugs-target-seq-sim.txt&apos;]
diseasefeatfiles =[&apos;features/diseases-hpo-sim.txt&apos;,  &apos;features/diseases-pheno-sim.txt&apos; ]

goldindfile = &apos;known_associations/predict-gold-standard-omim.txt&apos;
drugDiseaseKnown = pd.read_csv(goldindfile,delimiter=&apos;\t&apos;) 
drugDiseaseKnown.Disease = drugDiseaseKnown.Disease.astype(str)
drugDiseaseKnown.head()</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Merge feature matrix

def adjcencydict2matrix(df, name1, name2):
    df1 = df.copy()
    df1= df1.rename(index=str, columns={name1: name2, name2: name1})
    print (len(df))
    df =df.append(df1)
    print (len(df))
    return df.pivot(index=name1, columns=name2)

def mergeFeatureMatrix(drugfeatfiles, diseasefeatfiles):
    for i,featureFilename in enumerate(drugfeatfiles):
        df = pd.read_csv(featureFilename, delimiter=&apos;\t&apos;)
        cond = df.Drug1 &gt; df.Drug2
        df.loc[cond, [&apos;Drug1&apos;, &apos;Drug2&apos;]] = df.loc[cond, [&apos;Drug2&apos;, &apos;Drug1&apos;]].values
        if i != 0:
            drug_df=drug_df.merge(df,on=[&apos;Drug1&apos;,&apos;Drug2&apos;],how=&apos;inner&apos;)
            #drug_df=drug_df.merge(temp,how=&apos;outer&apos;,on=&apos;Drug&apos;)
        else:
            drug_df =df
    drug_df.fillna(0, inplace=True)
    
    drug_df = adjcencydict2matrix(drug_df, &apos;Drug1&apos;, &apos;Drug2&apos;)
    drug_df = drug_df.fillna(1.0)

    
    for i,featureFilename in enumerate(diseasefeatfiles):
        print (featureFilename)
        df=pd.read_csv(featureFilename, delimiter=&apos;\t&apos;)
        cond = df.Disease1 &gt; df.Disease2
        df.loc[cond, [&apos;Disease1&apos;,&apos;Disease2&apos;]] = df.loc[cond, [&apos;Disease2&apos;,&apos;Disease1&apos;]].values
        if i != 0:
            disease_df = disease_df.merge(df,on=[&apos;Disease1&apos;,&apos;Disease2&apos;], how=&apos;inner&apos;)
            #drug_df=drug_df.merge(temp,how=&apos;outer&apos;,on=&apos;Drug&apos;)
        else:
            disease_df = df
    disease_df.fillna(0, inplace=True)
    disease_df.Disease1 = disease_df.Disease1.astype(str)
    disease_df.Disease2 = disease_df.Disease2.astype(str)
    
    disease_df = adjcencydict2matrix(disease_df, &apos;Disease1&apos;, &apos;Disease2&apos;)
    disease_df = disease_df.fillna(1.0)
    
    return drug_df, disease_df

drug_df, disease_df = mergeFeatureMatrix(drugfeatfiles, diseasefeatfiles)

drug_df.head()

disease_df.head()</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell03 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell03">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Generate positive and negative pairs

def generatePairs(drug_df, disease_df, drugDiseaseKnown):
    drugwithfeatures = set(drug_df.columns.levels[1])
    diseaseswithfeatures = set(disease_df.columns.levels[1])
    
    drugDiseaseDict  = set([tuple(x) for x in  drugDiseaseKnown[[&apos;Drug&apos;,&apos;Disease&apos;]].values])

    commonDrugs= drugwithfeatures.intersection( drugDiseaseKnown.Drug.unique())
    commonDiseases=  diseaseswithfeatures.intersection(drugDiseaseKnown.Disease.unique() )
    print (&quot;commonDrugs: %d commonDiseases : %d&quot;%(len(commonDrugs),len(commonDiseases)))

    #abridged_drug_disease = [(dr,di)  for  (dr,di)  in drugDiseaseDict if dr in drugwithfeatures and di in diseaseswithfeatures ]

    #commonDrugs = set( [ dr  for dr,di in  abridged_drug_disease])
    #commonDiseases  =set([ di  for dr,di in  abridged_drug_disease])

    print (&quot;Gold standard, associations: %d drugs: %d diseases: %d&quot;%(len(drugDiseaseKnown),len(drugDiseaseKnown.Drug.unique()),len(drugDiseaseKnown.Disease.unique())))
    print (&quot;Drugs with features: %d Diseases with features: %d&quot;%(len(drugwithfeatures),len(diseaseswithfeatures)))
    print (&quot;commonDrugs: %d commonDiseases : %d&quot;%(len(commonDrugs),len(commonDiseases)))

    pairs=[]
    classes=[]
    for dr in commonDrugs:
        for di in commonDiseases:
            cls = (1 if (dr,di) in drugDiseaseDict else 0)
            pairs.append((dr,di))
            classes.append(cls)
            
    return pairs, classes

pairs, classes = generatePairs(drug_df, disease_df, drugDiseaseKnown)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell04 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell04">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Balance negative samples/postives

from sklearn.model_selection import GroupKFold
from sklearn.model_selection import StratifiedKFold
def balance_data(pairs, classes, n_proportion):
    classes = np.array(classes)
    pairs = np.array(pairs)
    
    indices_true = np.where(classes == 1)[0]
    indices_false = np.where(classes == 0)[0]

    np.random.shuffle(indices_false)
    indices = indices_false[:(n_proportion*indices_true.shape[0])]
    print (&quot;+/-:&quot;, len(indices_true), len(indices), len(indices_false))
    pairs = np.concatenate((pairs[indices_true], pairs[indices]), axis=0)
    classes = np.concatenate((classes[indices_true], classes[indices]), axis=0) 
    
 
    return pairs, classes

n_proportion = 2
pairs, classes= balance_data(pairs, classes, n_proportion)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Train-Test Splitting

pairs_train, pairs_test, classes_train, classes_test = model_selection.train_test_split(pairs, classes, stratify=classes, test_size=0.2, shuffle=True)

len(pairs_train), len(pairs_test)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell06 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell06">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Feature extraction (Best Combined similarity)

def geometricMean(drug, disease, knownDrugDisease, drugDF, diseaseDF):
    #print (drug, disease)
    a  = drugDF.loc[knownDrugDisease[:,0]][drug].values
    b  = diseaseDF.loc[knownDrugDisease[:,1]][disease].values
    #print (a,b)
    c = np.sqrt( np.multiply(a,b) )
    ix2 = (knownDrugDisease == [drug, disease])
    c[ix2[:,1]&amp; ix2[:,0]]=0.0
    return float(np.max(c))


def createFeatureDF(pairs, classes, knownDrugDisease, drugDFs, diseaseDFs):
    totalNumFeatures = len(drugDFs)*len(diseaseDFs)
    #featureMatri x= np.empty((len(classes),totalNumFeatures), float)
    df =pd.DataFrame(list(zip(pairs[:,0], pairs[:,1], classes)), columns =[&apos;Drug&apos;,&apos;Disease&apos;,&apos;Class&apos;])
    index = 0
    for i,drug_col in enumerate(drugDFs.columns.levels[0]):
        for j,disease_col in enumerate(diseaseDFs.columns.levels[0]):
            drugDF = drugDFs[drug_col]
            diseaseDF = diseaseDFs[disease_col]
            df[&quot;Feature_&quot;+str(drug_col)+&apos;_&apos;+str(disease_col)] = df.apply(lambda row: geometricMean( row.Drug, row.Disease, knownDrugDisease, drugDF, diseaseDF), axis=1)
    return df

def calculateCombinedSimilarity(pairs_train, pairs_test, classes_train, classes_test, drug_df, disease_df, knownDrugDisease):
    train_df  = createFeatureDF(pairs_train, classes_train, knownDrugDisease, drug_df, disease_df)
    test_df = createFeatureDF(pairs_test, classes_test, knownDrugDisease, drug_df, disease_df)
    return train_df, test_df

knownDrugDisease= pairs_train[classes_train==1]
train_df, test_df = calculateCombinedSimilarity(pairs_train, pairs_test, classes_train, classes_test, drug_df, disease_df, knownDrugDisease)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell07 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell07">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Model Training

from sklearn import tree, ensemble
from sklearn import svm, linear_model, neighbors

def trainModel(train_df, clf):
    features = list(train_df.columns.difference([&apos;Drug&apos;,&apos;Disease&apos;,&apos;Class&apos;]))
    X = train_df[features]
    y = train_df[&apos;Class&apos;]
    print (&apos;fiting classifier...&apos;)
    clf.fit(X, y)
    return clf

n_seed = 100
clf = linear_model.LogisticRegression(penalty=&apos;l2&apos;, dual=False, tol=0.0001, C=1.0, random_state=n_seed) 
clf = trainModel(train_df, clf)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># Evaulation

from sklearn import metrics
import numbers
def multimetric_score(estimator, X_test, y_test, scorers):
    &quot;&quot;&quot;Return a dict of score for multimetric scoring&quot;&quot;&quot;
    scores = {}
    for name, scorer in scorers.items():
        if y_test is None:
            score = scorer(estimator, X_test)
        else:
            score = scorer(estimator, X_test, y_test)

        if hasattr(score, &apos;item&apos;):
            try:
                # e.g. unwrap memmapped scalars
                score = score.item()
            except ValueError:
                # non-scalar?
                pass
        scores[name] = score

        if not isinstance(score, numbers.Number):
            raise ValueError(&quot;scoring must return a number, got %s (%s) &quot;
                             &quot;instead. (scorer=%s)&quot;
                             % (str(score), type(score), name))
    return scores

def evaluate(test_df, clf):
    features = list(train_df.columns.difference([&apos;Drug&apos;,&apos;Disease&apos;,&apos;Class&apos;]))
    X_test =  test_df[features]
    y_test = test_df[&apos;Class&apos;]

    scoring = [&apos;precision&apos;, &apos;recall&apos;, &apos;accuracy&apos;, &apos;roc_auc&apos;, &apos;f1&apos;, &apos;average_precision&apos;]
    scorers, multimetric = metrics.scorer._check_multimetric_scoring(clf, scoring=scoring)
    scores = multimetric_score(clf, X_test, y_test, scorers)
    return scores

scores = evaluate(test_df, clf)
print (&quot;Test:&quot;,scores)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdf:type rdf:resource="&reprod;Cell"/>
        <dc:description># 10-fold drug-disjoint cross-validation (PREDICT - CV scheme )

disjoint = True
n_fold = 10

if disjoint:
    print (&apos;Disjoint&apos;)
    groups = pairs[:,0] # group by drug
    group_kfold = GroupKFold(n_splits=n_fold)
    cv = group_kfold.split(pairs, classes, groups)
else:
    print (&apos;Non-disjoint&apos;)
    skf = StratifiedKFold(n_splits=n_fold, shuffle=True, random_state=n_seed)
    cv = skf.split(pairs, classes)

n_seed = 100
cv_results = pd.DataFrame()
clf = linear_model.LogisticRegression(penalty=&apos;l2&apos;, dual=False, tol=0.0001, C=1.0, random_state=n_seed) 
  
for i, (train, test) in enumerate(cv):
    print (&apos;Fold&apos;,i+1)
    start_time = time.time()
    pairs_train = pairs[train]
    classes_train = classes[train] 
    pairs_test = pairs[test]
    classes_test = classes[test]
    knownDrugDisease= pairs_train[classes_train==1]
    
    train_df, test_df = calculateCombinedSimilarity(pairs_train, pairs_test, classes_train, classes_test, drug_df, disease_df, knownDrugDisease)
    elapsed_time = time.time() - start_time
    print (&apos;Time elapsed to generate features:&apos;,time.strftime(&quot;%H:%M:%S&quot;, time.gmtime(elapsed_time)))

    clf = trainModel(train_df, clf)
    
    scores = evaluate(test_df, clf)
    print (&quot;Scores:&quot;,scores)
    cv_results = cv_results.append(scores, ignore_index=True)

cv_results.mean()

cv_results.to_csv(&apos;results/DCV_runs_transd.csv&apos;)</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Model preparation, train and evaluation Workflow: OpenPREDCIT - ML.ipynb v.0.2</rdfs:label>
        <dc:description>import random
import numpy as np
from sklearn import model_selection
from sklearn.model_selection import GroupKFold
import pandas as pd
import math
import time

##Get the features and gold standard

drugfeatfiles = [&apos;data/features/drugs-fingerprint-sim.csv&apos;,&apos;data/features/drugs-se-sim.csv&apos;, 
                 &apos;data/features/drugs-ppi-sim.csv&apos;, &apos;data/features/drugs-target-go-sim.csv&apos;,&apos;data/features/drugs-target-seq-sim.csv&apos;]
diseasefeatfiles =[&apos;data/features/diseases-hpo-sim.csv&apos;,  &apos;data/features/diseases-pheno-sim.csv&apos; ]

goldindfile = &apos;data/input/openpredict-omim-drug.csv&apos;
drugDiseaseKnown = pd.read_csv(goldindfile,delimiter=&apos;,&apos;) 
drugDiseaseKnown.head()

drugDiseaseKnown.rename(columns={&apos;drugid&apos;:&apos;Drug&apos;,&apos;omimid&apos;:&apos;Disease&apos;}, inplace=True)
drugDiseaseKnown.Disease = drugDiseaseKnown.Disease.astype(str)
drugDiseaseKnown.head()

##Merge feature matrix

def adjcencydict2matrix(df, name1, name2):
    df1 = df.copy()
    df1= df1.rename(index=str, columns={name1: name2, name2: name1})
    print (len(df))
    df =df.append(df1)
    print (len(df))
    return df.pivot(index=name1, columns=name2)

def mergeFeatureMatrix(drugfeatfiles, diseasefeatfiles):
    for i,featureFilename in enumerate(drugfeatfiles):
        print (featureFilename)
        df = pd.read_csv(featureFilename, delimiter=&apos;,&apos;)
        cond = df.Drug1 &gt; df.Drug2
        df.loc[cond, [&apos;Drug1&apos;, &apos;Drug2&apos;]] = df.loc[cond, [&apos;Drug2&apos;, &apos;Drug1&apos;]].values
        if i != 0:
            drug_df=drug_df.merge(df,on=[&apos;Drug1&apos;,&apos;Drug2&apos;],how=&apos;inner&apos;)
            #drug_df=drug_df.merge(temp,how=&apos;outer&apos;,on=&apos;Drug&apos;)
        else:
            drug_df =df
    drug_df.fillna(0, inplace=True)
    
    drug_df = adjcencydict2matrix(drug_df, &apos;Drug1&apos;, &apos;Drug2&apos;)
    drug_df = drug_df.fillna(1.0)

    
    for i,featureFilename in enumerate(diseasefeatfiles):
        print (featureFilename)
        df=pd.read_csv(featureFilename, delimiter=&apos;,&apos;)
        cond = df.Disease1 &gt; df.Disease2
        df.loc[cond, [&apos;Disease1&apos;,&apos;Disease2&apos;]] = df.loc[cond, [&apos;Disease2&apos;,&apos;Disease1&apos;]].values
        if i != 0:
            disease_df = disease_df.merge(df,on=[&apos;Disease1&apos;,&apos;Disease2&apos;], how=&apos;inner&apos;)
            #drug_df=drug_df.merge(temp,how=&apos;outer&apos;,on=&apos;Drug&apos;)
        else:
            disease_df = df
    disease_df.fillna(0, inplace=True)
    disease_df.Disease1 = disease_df.Disease1.astype(str)
    disease_df.Disease2 = disease_df.Disease2.astype(str)
    
    disease_df = adjcencydict2matrix(disease_df, &apos;Disease1&apos;, &apos;Disease2&apos;)
    disease_df = disease_df.fillna(1.0)
    
    return drug_df, disease_df

drug_df, disease_df = mergeFeatureMatrix(drugfeatfiles, diseasefeatfiles)

drug_df.head()

disease_df.head()

def generatePairs(drug_df, disease_df, drugDiseaseKnown):
    drugwithfeatures = set(drug_df.columns.levels[1])
    diseaseswithfeatures = set(disease_df.columns.levels[1])
    
    drugDiseaseDict  = set([tuple(x) for x in  drugDiseaseKnown[[&apos;Drug&apos;,&apos;Disease&apos;]].values])

    commonDrugs= drugwithfeatures.intersection( drugDiseaseKnown.Drug.unique())
    commonDiseases=  diseaseswithfeatures.intersection(drugDiseaseKnown.Disease.unique() )
    print (&quot;commonDrugs: %d commonDiseases : %d&quot;%(len(commonDrugs),len(commonDiseases)))

    #abridged_drug_disease = [(dr,di)  for  (dr,di)  in drugDiseaseDict if dr in drugwithfeatures and di in diseaseswithfeatures ]

    #commonDrugs = set( [ dr  for dr,di in  abridged_drug_disease])
    #commonDiseases  =set([ di  for dr,di in  abridged_drug_disease])

    print (&quot;Gold standard, associations: %d drugs: %d diseases: %d&quot;%(len(drugDiseaseKnown),len(drugDiseaseKnown.Drug.unique()),len(drugDiseaseKnown.Disease.unique())))
    print (&quot;Drugs with features: %d Diseases with features: %d&quot;%(len(drugwithfeatures),len(diseaseswithfeatures)))
    print (&quot;commonDrugs: %d commonDiseases : %d&quot;%(len(commonDrugs),len(commonDiseases)))

    pairs=[]
    classes=[]
    for dr in commonDrugs:
        for di in commonDiseases:
            cls = (1 if (dr,di) in drugDiseaseDict else 0)
            pairs.append((dr,di))
            classes.append(cls)
            
    return pairs, classes

pairs, classes = generatePairs(drug_df, disease_df, drugDiseaseKnown)

##Balance negative samples/postives

from sklearn.model_selection import GroupKFold
from sklearn.model_selection import StratifiedKFold
def balance_data(pairs, classes, n_proportion):
    classes = np.array(classes)
    pairs = np.array(pairs)
    
    indices_true = np.where(classes == 1)[0]
    indices_false = np.where(classes == 0)[0]

    np.random.shuffle(indices_false)
    indices = indices_false[:(n_proportion*indices_true.shape[0])]
    print (&quot;+/-:&quot;, len(indices_true), len(indices), len(indices_false))
    pairs = np.concatenate((pairs[indices_true], pairs[indices]), axis=0)
    classes = np.concatenate((classes[indices_true], classes[indices]), axis=0) 
    
 
    return pairs, classes

n_proportion = 2
pairs, classes= balance_data(pairs, classes, n_proportion)

##Train-Test Splitting
pairs_train, pairs_test, classes_train, classes_test = model_selection.train_test_split(pairs, classes, stratify=classes, test_size=0.2, shuffle=True)

len(pairs_train), len(pairs_test)

##Feature extraction (Best Combined similarity)

def geometricMean(drug, disease, knownDrugDisease, drugDF, diseaseDF):
    #print (drug, disease)
    a  = drugDF.loc[knownDrugDisease[:,0]][drug].values
    b  = diseaseDF.loc[knownDrugDisease[:,1]][disease].values
    #print (a,b)
    c = np.sqrt( np.multiply(a,b) )
    ix2 = (knownDrugDisease == [drug, disease])
    c[ix2[:,1]&amp; ix2[:,0]]=0.0
    return float(np.max(c))


def createFeatureDF(pairs, classes, knownDrugDisease, drugDFs, diseaseDFs):
    totalNumFeatures = len(drugDFs)*len(diseaseDFs)
    #featureMatri x= np.empty((len(classes),totalNumFeatures), float)
    df =pd.DataFrame(list(zip(pairs[:,0], pairs[:,1], classes)), columns =[&apos;Drug&apos;,&apos;Disease&apos;,&apos;Class&apos;])
    index = 0
    for i,drug_col in enumerate(drugDFs.columns.levels[0]):
        for j,disease_col in enumerate(diseaseDFs.columns.levels[0]):
            drugDF = drugDFs[drug_col]
            diseaseDF = diseaseDFs[disease_col]
            df[&quot;Feature_&quot;+str(drug_col)+&apos;_&apos;+str(disease_col)] = df.apply(lambda row: geometricMean( row.Drug, row.Disease, knownDrugDisease, drugDF, diseaseDF), axis=1)
    return df

def calculateCombinedSimilarity(pairs_train, pairs_test, classes_train, classes_test, drug_df, disease_df, knownDrugDisease):
    train_df  = createFeatureDF(pairs_train, classes_train, knownDrugDisease, drug_df, disease_df)
    test_df = createFeatureDF(pairs_test, classes_test, knownDrugDisease, drug_df, disease_df)
    return train_df, test_df

knownDrugDisease= pairs_train[classes_train==1]
train_df, test_df = calculateCombinedSimilarity(pairs_train, pairs_test, classes_train, classes_test, drug_df, disease_df, knownDrugDisease)

##Model Training

from sklearn import tree, ensemble
from sklearn import svm, linear_model, neighbors

def trainModel(train_df, clf):
    features = list(train_df.columns.difference([&apos;Drug&apos;,&apos;Disease&apos;,&apos;Class&apos;]))
    X = train_df[features]
    y = train_df[&apos;Class&apos;]
    print (&apos;fiting classifier...&apos;)
    clf.fit(X, y)
    return clf

n_seed = 100
clf = linear_model.LogisticRegression(penalty=&apos;l2&apos;, dual=False, tol=0.0001, C=1.0, random_state=n_seed) 
clf = trainModel(train_df, clf)

##Evaulation

from sklearn import metrics
import numbers
def multimetric_score(estimator, X_test, y_test, scorers):
    &quot;&quot;&quot;Return a dict of score for multimetric scoring&quot;&quot;&quot;
    scores = {}
    for name, scorer in scorers.items():
        if y_test is None:
            score = scorer(estimator, X_test)
        else:
            score = scorer(estimator, X_test, y_test)

        if hasattr(score, &apos;item&apos;):
            try:
                # e.g. unwrap memmapped scalars
                score = score.item()
            except ValueError:
                # non-scalar?
                pass
        scores[name] = score

        if not isinstance(score, numbers.Number):
            raise ValueError(&quot;scoring must return a number, got %s (%s) &quot;
                             &quot;instead. (scorer=%s)&quot;
                             % (str(score), type(score), name))
    return scores

def evaluate(test_df, clf):
    features = list(train_df.columns.difference([&apos;Drug&apos;,&apos;Disease&apos;,&apos;Class&apos;]))
    X_test =  test_df[features]
    y_test = test_df[&apos;Class&apos;]

    scoring = [&apos;precision&apos;, &apos;recall&apos;, &apos;accuracy&apos;, &apos;roc_auc&apos;, &apos;f1&apos;, &apos;average_precision&apos;]
    scorers, multimetric = metrics.scorer._check_multimetric_scoring(clf, scoring=scoring)
    scores = multimetric_score(clf, X_test, y_test, scorers)
    return scores

scores = evaluate(test_df, clf)
print (&quot;Test:&quot;,scores)

##10-fold drug-disjoint cross-validation (PREDICT - CV scheme )

disjoint = True
n_fold = 10

if disjoint:
    print (&apos;Disjoint&apos;)
    groups = pairs[:,0] # group by drug
    group_kfold = GroupKFold(n_splits=n_fold)
    cv = group_kfold.split(pairs, classes, groups)
else:
    print (&apos;Non-disjoint&apos;)
    skf = StratifiedKFold(n_splits=n_fold, shuffle=True, random_state=n_seed)
    cv = skf.split(pairs, classes)

n_seed = 100
cv_results = pd.DataFrame()
clf = linear_model.LogisticRegression(penalty=&apos;l2&apos;, solver=&apos;lbfgs&apos;, dual=False, tol=0.0001, C=1.0, random_state=n_seed) 
  
for i, (train, test) in enumerate(cv):
    print (&apos;Fold&apos;,i+1)
    start_time = time.time()
    pairs_train = pairs[train]
    classes_train = classes[train] 
    pairs_test = pairs[test]
    classes_test = classes[test]
    knownDrugDisease= pairs_train[classes_train==1]
    
    train_df, test_df = calculateCombinedSimilarity(pairs_train, pairs_test, classes_train, classes_test, drug_df, disease_df, knownDrugDisease)
    elapsed_time = time.time() - start_time
    print (&apos;Time elapsed to generate features:&apos;,time.strftime(&quot;%H:%M:%S&quot;, time.gmtime(elapsed_time)))

    clf = trainModel(train_df, clf)
    
    scores = evaluate(test_df, clf)
    #print (&quot;Scores:&quot;,scores)
    cv_results = cv_results.append(scores, ignore_index=True)

cv_results.mean()

cv_results.to_csv(&apos;data/results/disjoint_lr.csv&apos;)

import pandas as pd

cv_results = pd.read_csv(&apos;data/results/disjoint_lr.csv&apos;)

cv_results.head()

from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph, Namespace
from rdflib import Graph, URIRef, Literal, RDF, ConjunctiveGraph
def to_rdf(g, df, column_types, row_uri):
    &quot;&quot;&quot;
    Parameters
    ----------
    g : input rdflib.Graph  
    df: DataFrame to be converted into RDF Graph
    column_types: dictonary of column and its type, type can be URI or Literal
    row_uri: rdf:type value for row index, should be URI
    Returns
    -------
    g: rdflib.Graph generated from DataFrame object
    &quot;&quot;&quot;
    
    for (index, series) in df.iterrows():
        g.add((URIRef(index), RDF.type, URIRef(row_uri)) )
        for (column, value) in series.iteritems():
            if column_types[column] == &apos;URI&apos;:
                g.add((URIRef(index), URIRef(column), URIRef(value)))
            else:
                g.add((URIRef(index), URIRef(column), Literal(value)))
                
    return g

import time
def generateURI(prefix):
    uniqueID= int(round(time.time() * 1000))
    uri = URIRef(prefix+str(uniqueID))
    return uri

DC = Namespace(&quot;http://purl.org/dc/terms/&quot;)
MLS = Namespace(&quot;http://www.w3.org/ns/mls#&quot;)
RPC = Namespace(&quot;https://w3id.org/reproduceme#&quot;)
RDFS = Namespace(&quot;http://www.w3.org/2000/01/rdf-schema#&quot;)
def addProvanace(g):
    #graphURI = URIRef(&apos;http://bio2rdf.org/openpredict_resource:bio2rdf.output.openpredict.R1&apos;)

    runURI = generateURI(&apos;http://www.w3.org/ns/mls#Run&apos;)
    evalURI = generateURI(&apos;http://www.w3.org/ns/mls#ModelEvaluation&apos;)
    accURI = generateURI(&apos;http://www.w3.org/ns/mls#Accuracy&apos;)
    evalSpecURI = generateURI(&apos;http://www.w3.org/ns/mls#EvaluationSpecification&apos;)
    
    g.add((runURI, RDF[&apos;type&apos;], MLS[&apos;Run&apos;]))
    g.add((runURI, MLS[&apos;achieves&apos;], RPC[&apos;Pipeline_OpenPREDICT&apos;]))
          
    g.add((runURI, MLS[&apos;hasOutput&apos;], evalURI))
    g.add((evalURI, RDF[&apos;type&apos;], MLS[&apos;ModelEvaluation&apos;]))
    
    g.add((evalSpecURI, MLS[&apos;defines&apos;],  RPC[&apos;Pipeline_OpenPREDICT&apos;]))
    g.add((evalSpecURI, MLS[&apos;hasPart&apos;],  MLS[&apos;TenFoldCrossValidation&apos;]))
    g.add((MLS[&apos;TenFoldCrossValidation&apos;], RDF[&apos;type&apos;],  MLS[&apos;EvaluationProcedure&apos;]))
    g.add((MLS[&apos;TenFoldCrossValidation&apos;], RDFS[&apos;label&apos;],  Literal(&apos;10-fold CV&apos;)))
    
    g.add((evalSpecURI, MLS[&apos;hasPart&apos;],  MLS[&apos;DrugwiseCrossValidation&apos;]))
    g.add((MLS[&apos;DrugwiseCrossValidation&apos;], RDF[&apos;type&apos;],  MLS[&apos;EvaluationProcedure&apos;]))
    g.add((MLS[&apos;DrugwiseCrossValidation&apos;], RDFS[&apos;label&apos;],  Literal(&apos;Drugwise CrossValidation&apos;)))
    g.add((MLS[&apos;DrugwiseCrossValidation&apos;], DC[&apos;description&apos;],  Literal(&apos;Split drugs in 10-fold, remove drugs of each fold in the gold standard and consequently remove all the known indication sassociated with them&apos;)))
    
    g.add((evalSpecURI, MLS[&apos;hasPart&apos;],  accURI))      
    g.add((evalURI, MLS[&apos;specifiedBy&apos;],accURI ))
    g.add((accURI, RDF[&apos;type&apos;], MLS[&apos;EvaluationMeasure&apos;]))  
    g.add((accURI, RDFS[&apos;label&apos;],  Literal(&apos;Accuracy&apos;)))
    g.add((accURI, MLS[&apos;hasValue&apos;],  Literal(&apos;0.85&apos;)))
   
    return g

g =  ConjunctiveGraph(identifier = URIRef(&apos;http://bio2rdf.org/openpredict_resource:bio2rdf.dataset.openpredict.R1&apos;))

g= addProvanace(g)

g.serialize(&apos;data/rdf/results_disjoint_lr.nq&apos;, format=&apos;nquads&apos;)</dc:description>
        <dcat:downloadURL>https://github.com/fair-workflows/openpredict/blob/975324eb5263bc0d5d709f833baca31952817844/OpenPREDCIT%20-%20ML.ipynb</dcat:downloadURL>
        <dc:language rdf:resource="http://purl.org/plex#ComputerLanguage_Python_3.7"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Prepare_Input_Data_Files -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Prepare_Input_Data_Files">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Prepare Input Data Files</rdfs:label>
        <dc:description>Prepare Input Data Files</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:wasRevisionOf rdf:resource="&opredict;Plan_Prepare_Input_Data_Files_v02"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_Drugbank_dataset"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_Kegg_dataset"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_SIDER_dataset"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_human_interactome_barabasi"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_phenotype_annotations"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Prepare_Input_Data_Files_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Prepare_Input_Data_Files_v02">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Prepare Input Data Files</rdfs:label>
        <dc:description>Prepare Input Data Files</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:wasRevisionOf rdf:resource="&opredict;Plan_Prepare_Input_Data_Files"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_Drugbank_dataset"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_Kegg_dataset"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_SIDER_dataset"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_gold_standard_drug_indications"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_human_interactome_barabasi_v02"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_mesh_annotation"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_phenotype_annotations_v02"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Download_and_save_pubchem_to_drugbank"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Prepare_triplestore_for_input_data -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Prepare_triplestore_for_input_data">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Prepare triplestore for input data</rdfs:label>
        <dc:description>Prepare a triplestore to load all input data as RDF. Steps performed by Remzi here, e.g.:
1- Install Virtuoso/GraphDB in environment XPTO
2- Configure SPARQL endpoints 
3- Configure insert data interface</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="http://purl.org/plex#opredict_Link_variable_to_triplestore_for_input_data"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_Drugbank_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save Drugbank dataset</rdfs:label>
        <dc:description>Save Drugbank dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_variable_to_local_Drugbank_dataset"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_Kegg_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save Kegg dataset</rdfs:label>
        <dc:description>Save Drugbank dataset file (.gz) and unzip into: D:\Projects\FAIR workflows\POC\OpenPREDICT\Workflow\input\drugbank.nq</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_variable_to_local_Kegg_dataset"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_SIDER_dataset">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save SIDER dataset</rdfs:label>
        <dc:description>Save SIDER dataset</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_variable_to_local_SIDER_dataset"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_as_drugbank-drug-smiles_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_as_drugbank-drug-smiles_tab">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save as drugbank-drug-smiles.tab</rdfs:label>
        <dc:description>Save as drugbank-drug-smiles.tab</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_results_to_variable_Input_file_drugbank-drug-smiles_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_as_drugbank-drug-target_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_as_drugbank-drug-target_tab">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save as drugbank drug-target.tab</rdfs:label>
        <dc:description>Save as drugbank drug-target.tab</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_results_to_variable_Input_file_drugbank-drug-target_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_as_drugbank-sider-se_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_as_drugbank-sider-se_tab">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save as drugbank-sider-se.tab</rdfs:label>
        <dc:description>Save as drugbank-sider-se.tab</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_results_to_variable_Input_file_drugbank-sider-se_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_files_in_triplestore -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_files_in_triplestore">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save files in triplestore</rdfs:label>
        <dc:description>Instructions to save the RDF files in the triplestore</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_human_interactome_barabasi">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save human interactome barabasi</rdfs:label>
        <dc:description>1-Open file;
2-Remove header;
3-Save file as: human-interactome-barabasi.tab</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_variable_to_local_Human_interactome_barabasi"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Save_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Save_phenotype_annotations">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Save phenotype annotations</rdfs:label>
        <dc:description>Save file as: /input/phenotype_annotation_hpoteam.tab</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <prov:qualifiedUsage rdf:resource="&opredict;Link_variable_to_local_phenotype_annotations"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Plan_Upload_files_to_a_triplestore -->

    <owl:NamedIndividual rdf:about="&opredict;Plan_Upload_files_to_a_triplestore">
        <rdf:type rdf:resource="&p-plan;Plan"/>
        <rdfs:label>Upload files to a triplestore</rdfs:label>
        <dc:description>Upload files to a triplestore</dc:description>
        <dc:language rdf:resource="http://purl.org/plex#LinguisticSystem_xsd_language_English"/>
        <pwo:hasFirstStep rdf:resource="&opredict;Step_Prepare_triplestore_for_input_data"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Drugbank_dataset_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Kegg_dataset_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_SIDER_dataset_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#QueryExecution_DRUG_SIDE_EFFECTS_from_SIDER -->

    <owl:NamedIndividual rdf:about="&opredict;QueryExecution_DRUG_SIDE_EFFECTS_from_SIDER">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Variable_Query_results_DRUG_SIDE_EFFECTS_from_SIDER"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#QueryExecution_DRUG_SMILES_from_DRUGBANK -->

    <owl:NamedIndividual rdf:about="&opredict;QueryExecution_DRUG_SMILES_from_DRUGBANK">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Variable_Query_results_DRUG_SMILES_from_DRUGBANK"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#QueryExecution_DRUG_TARGETS_from_DRUGBANK_and_KEGG -->

    <owl:NamedIndividual rdf:about="&opredict;QueryExecution_DRUG_TARGETS_from_DRUGBANK_and_KEGG">
        <rdf:type rdf:resource="&prov;Usage"/>
        <prov:entity rdf:resource="&opredict;Variable_Query_results_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Role_Developer -->

    <owl:NamedIndividual rdf:about="&opredict;Role_Developer">
        <rdf:type rdf:resource="&prov;Role"/>
        <rdfs:label>Developer </rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Role_Executor -->

    <owl:NamedIndividual rdf:about="&opredict;Role_Executor">
        <rdf:type rdf:resource="&prov;Role"/>
        <rdfs:label>Executor (tester?)</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#SPARQLConstraint_DRUG_SIDE_EFFECTS_from_SIDER -->

    <owl:NamedIndividual rdf:about="&opredict;SPARQLConstraint_DRUG_SIDE_EFFECTS_from_SIDER">
        <rdf:type rdf:resource="&sh;SPARQLConstraint"/>
        <sh:select>PREFIX dv: &lt;http://bio2rdf.org/drugbank_vocabulary:&gt;
PREFIX sider: &lt;http://bio2rdf.org/sider_vocabulary:&gt;

SELECT distinct ?drugid ?se
{
?dia &lt;http://bio2rdf.org/sider_vocabulary:drug&gt; ?stitch_flat .
?dia &lt;http://bio2rdf.org/sider_vocabulary:effect&gt; ?se .
{
?stitch_flat &lt;http://bio2rdf.org/sider_vocabulary:x-pubchem.compound&gt; ?pc .
}
UNION{
?stitch_flat &lt;http://bio2rdf.org/sider_vocabulary:stitch-stereo&gt; ?stitch_stereo .
?stitch_stereo &lt;http://bio2rdf.org/sider_vocabulary:x-pubchem.compound&gt; ?pc .
}
?d dv:x-pubchemcompound ?pc  .
BIND(STRAFTER( str(?d), &quot;http://bio2rdf.org/drugbank:&quot;) AS ?drugid)
}</sh:select>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#SPARQLConstraint_DRUG_SMILES_from_DRUGBANK -->

    <owl:NamedIndividual rdf:about="&opredict;SPARQLConstraint_DRUG_SMILES_from_DRUGBANK">
        <rdf:type rdf:resource="&sh;SPARQLConstraint"/>
        <sh:select>PREFIX dv: &lt;http://bio2rdf.org/drugbank_vocabulary:&gt;

SELECT distinct ?drugid ?smiles
{
 ?d &lt;http://bio2rdf.org/openpredict_vocabulary:indication&gt; ?i .
 ?d dv:calculated-properties ?cp .
 ?cp a dv:SMILES .
 ?cp dv:value ?smiles .
 BIND( STRAFTER(str(?d), &quot;http://bio2rdf.org/drugbank:&quot;) AS ?drugid)
}</sh:select>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#SPARQLConstraint_DRUG_TARGETS_from_DRUGBANK_and_KEGG -->

    <owl:NamedIndividual rdf:about="&opredict;SPARQLConstraint_DRUG_TARGETS_from_DRUGBANK_and_KEGG">
        <rdf:type rdf:resource="&sh;SPARQLConstraint"/>
        <sh:select>PREFIX iv: &lt;http://bio2rdf.org/irefindex_vocabulary:&gt;
PREFIX dv: &lt;http://bio2rdf.org/drugbank_vocabulary:&gt;
PREFIX hv: &lt;http://bio2rdf.org/hgnc_vocabulary:&gt;
PREFIX kv: &lt;http://bio2rdf.org/kegg_vocabulary:&gt;
SELECT distinct ?drugid ?geneid
WHERE
{
?drug &lt;http://bio2rdf.org/openpredict_vocabulary:indication&gt; ?i .
{
  ?d a kv:Drug .
  ?d kv:target ?l .
  ?l kv:link ?t .
  BIND (URI( REPLACE(str(?t),&quot;HSA&quot;,&quot;hsa&quot;)) AS ?target) .
  ?target a kv:Gene .
  ?target kv:x-ncbigene ?ncbi .
  #?target kv:x-uniprot ?ncbi .
  ?d kv:x-drugbank ?drug .
}
UNION
{
  ?drug a dv:Drug .
  ?drug dv:target ?target .
  ?target dv:x-hgnc ?hgnc .
  ?hgnc hv:x-ncbigene ?ncbi .
  #?hgnc hv:uniprot ?ncbi .
}
BIND ( STRAFTER(str(?ncbi),&quot;http://bio2rdf.org/ncbigene:&quot;) AS ?geneid)
BIND( STRAFTER(str(?drug), &quot;http://bio2rdf.org/drugbank:&quot;) AS ?drugid)
}</sh:select>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Add_files_to_triplestore_and_execute_queries -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Add_files_to_triplestore_and_execute_queries">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Add files to triplestore and execute queries</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Add_files_to_triplestore_and_execute_queries"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_Drugbank_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download Drugbank dataset</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_Drugbank_dataset"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_Drugbank_dataset"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Drugbank_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_Kegg_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download Kegg dataset</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_Kegg_dataset"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_Kegg_dataset"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Kegg_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_SIDER_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download SIDER dataset</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_SIDER_dataset"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_SIDER_dataset"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_SIDER_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_Drugbank_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save Drugbank dataset</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_Drugbank_dataset"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Add_files_to_triplestore_and_execute_queries"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_Kegg_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save Kegg dataset</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_Kegg_dataset"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Add_files_to_triplestore_and_execute_queries"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_SIDER_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save SIDER dataset</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_SIDER_dataset"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Add_files_to_triplestore_and_execute_queries"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_gold_standard_drug_indications -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_gold_standard_drug_indications">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_gold_standard_drug_indications"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_gold_standard_drug_indications_file_online"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_gold_standard_drug_indications_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_human_interactome_barabasi">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save human interactome barabasi</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_human_interactome_barabasi"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Execute_FAIRifier_process_to_human_interactome_barabasi"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_human_interactome_barabasi_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_human_interactome_barabasi_v02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save human interactome barabasi</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_human_interactome_barabasi_v02"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Human_interactome_barabasi_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Human_interactome_barabasi_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_mesh_annotation -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_mesh_annotation">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_mesh_annotation"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_mesh_annotation_file_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_mesh_annotation_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_phenotype_annotations">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save phenotype annotations </rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_phenotype_annotations"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Execute_FAIRifier_process_to_phenotype_annotations"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_phenotype_annotations_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_phenotype_annotations_v02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download and save phenotype annotations </rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_phenotype_annotations_v02"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Phenotype_annotations_file_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Phenotype_annotations_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_and_save_pubchem_to_drugbank -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_and_save_pubchem_to_drugbank">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_and_save_pubchem_to_drugbank"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_mesh_annotation_file_online"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_pubchem_to_drugbank_file_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_human_interactome_barabasi">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download human interactome barabasi</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_human_interactome_barabasi"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_human_interactome_barabasi"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Human_interactome_barabasi_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Download_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Download_phenotype_annotations">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_2409"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Download phenotype annotations</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Download_phenotype_annotations"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_phenotype_annotations"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Phenotype_annotations_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Execute_FAIRifier_process_to_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Execute_FAIRifier_process_to_human_interactome_barabasi">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Execute FAIRifier process to human interactome barabasi</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_human_interactome_barabasi"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Execute_FAIRifier_process_to_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Execute_FAIRifier_process_to_phenotype_annotations">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Execute FAIRifier process to phenotype annotations</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Execute_FAIRifier_process_to_phenotype_annotations"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Phenotype_annotations_file_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Execute_queries_and_create_input_files_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Execute_queries_and_create_input_files_tab">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Execute_queries_and_create_input_files_tab"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Triplestore_endpoint_for_input_data"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Execute_query_DRUG_SIDE_EFFECTS_from_SIDER"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_as_drugbank-sider-se_tab"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Query_results_DRUG_SIDE_EFFECTS_from_SIDER"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Execute_query_DRUG_SMILES_from_DRUGBANK -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Execute_query_DRUG_SMILES_from_DRUGBANK">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_0224"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Execute_query_DRUG_SMILES_from_DRUGBANK"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_as_drugbank-drug-smiles_tab"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Query_results_DRUG_SMILES_from_DRUGBANK"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Execute_query_DRUG_TARGETS_from_DRUGBANK_and_KEGG -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Execute_query_DRUG_TARGETS_from_DRUGBANK_and_KEGG">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&edam;operation_0224"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Execute_query_DRUG_TARGETS_-from_DRUGBANK_and_KEGG"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_as_drugbank-drug-target_tab"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Query_results_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell00 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell00">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell00"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell01"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell01 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell01">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell01_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell01_Spec">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell01_Spec"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell06_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell02"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell03"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell03 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell03">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell03"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell04"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell04 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell04">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell04"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell05"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell05 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell05">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell05"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell06"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell06 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell06">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell07"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell06_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell06_Spec">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell06_Spec"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell10_Spec"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell07 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell07">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell07"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell08"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell08 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell08">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell08"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell09"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell09 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell09">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell09"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell10"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell10 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell10">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell10"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell11"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell10_Spec -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell10_Spec">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell10_Spec"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell11 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell11">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell11"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell12"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell12 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell12">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell12"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell13"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell13 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell13">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell13"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell14"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell14 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell14">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell14"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell15"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_01_Pipeline_Source_Cell15 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_01_Pipeline_Source_Cell15">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_Source_Cell15"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_Pipeline_OpenPREDICT_ipynb -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Feature generation: Pipeline OpenPREDICT.ipynb</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_01_Pipeline_OpenPREDICT_ipynb"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Feature generation: Pipeline OpenPREDICT.ipynb v.0.2</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_Download_and_Save_Input -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_Download_and_Save_Input">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_Download_and_Save_Input"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Format_results_for_presentation -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Format_results_for_presentation">
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Format results for presentation</rdfs:label>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Format_results_for_presentation"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell00 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell00">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell00"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell02"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell03"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell03 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell03">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell03"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell04"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell04 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell04">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell04"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell06"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell06 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell06">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell06"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell07"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell07 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell07">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell07"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08"/>
        <dul:precedes rdf:resource="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Model preparation, train and evaluation Workflow: OpenPREDCIT - ML.ipynb</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb"/>
        <dul:precedes rdf:resource="&opredict;Step_Format_results_for_presentation"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Model preparation, train and evaluation Workflow: OpenPREDCIT - ML.ipynb</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Format_results_for_presentation"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Prepare_Input_Data_Files -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Prepare_Input_Data_Files">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Prepare Input Data Files</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Prepare_Input_Data_Files"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Prepare_Input_Data_Files_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Prepare_Input_Data_Files_v02">
        <rdf:type rdf:resource="&bpmn;ScriptTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Prepare Input Data Files</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Prepare_Input_Data_Files_v02"/>
        <dul:precedes rdf:resource="&opredict;Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Prepare_triplestore_for_input_data -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Prepare_triplestore_for_input_data">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <dc:description>Configure a triplestore to upload all input data as RDF</dc:description>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Prepare_triplestore_for_input_data"/>
        <dul:precedes rdf:resource="&opredict;Step_Save_files_in_triplestore"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Triplestore_endpoint_for_input_data"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_Drugbank_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_Drugbank_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Save Drugbank dataset</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_Drugbank_dataset"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Drugbank_dataset_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Drugbank_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_Kegg_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_Kegg_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Save Kegg dataset</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_Kegg_dataset"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Kegg_dataset_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Kegg_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_SIDER_dataset -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_SIDER_dataset">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Save SIDER dataset</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_SIDER_dataset"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_SIDER_dataset_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_SIDER_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_as_drugbank-drug-smiles_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_as_drugbank-drug-smiles_tab">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_as_drugbank-drug-smiles_tab"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Input_file_drugbank-drug-smiles_tab"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Query_results_DRUG_SMILES_from_DRUGBANK"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_as_drugbank-drug-target_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_as_drugbank-drug-target_tab">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_as_drugbank-drug-target_tab"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Input_file_drugbank-drug-target_tab"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Query_results_DRUG_TARGETS_from_DRUGBANK_and_KEGG"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_as_drugbank-sider-se_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_as_drugbank-sider-se_tab">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_as_drugbank-sider-se_tab"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Input_file_drugbank-sider-se_tab"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Query_results_DRUG_SIDE_EFFECTS_from_SIDER"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_files_in_triplestore -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_files_in_triplestore">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_files_in_triplestore"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Triplestore_endpoint_for_input_data"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Triplestore_endpoint_for_input_data"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_human_interactome_barabasi -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_human_interactome_barabasi">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Save human interactome barabasi</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_human_interactome_barabasi"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Human_interactome_barabasi_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Human_interactome_barabasi_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Save_phenotype_annotations -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Save_phenotype_annotations">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <rdfs:label>Save phenotype annotations</rdfs:label>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Save_phenotype_annotations"/>
        <p-plan:hasOutputVar rdf:resource="&opredict;Variable_Phenotype_annotations_file_local"/>
        <p-plan:hasInputVar rdf:resource="&opredict;Variable_Phenotype_annotations_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Step_Upload_files_to_a_triplestore -->

    <owl:NamedIndividual rdf:about="&opredict;Step_Upload_files_to_a_triplestore">
        <rdf:type rdf:resource="&bpmn;ManualTask"/>
        <rdf:type rdf:resource="&p-plan;Step"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v01"/>
        <p-plan:isStepOfPlan rdf:resource="&opredict;Plan_Main_Protocol_v02"/>
        <dul:isDescribedBy rdf:resource="&opredict;Plan_Upload_files_to_a_triplestore"/>
        <dul:precedes rdf:resource="&opredict;Step_Execute_queries_and_create_input_files_tab"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Triplestore_endpoint_input_data -->

    <owl:NamedIndividual rdf:about="&opredict;Triplestore_endpoint_input_data">
        <rdf:type rdf:resource="&fabio;Triplestore"/>
        <rdf:type rdf:resource="&dcat;Distribution"/>
        <dc:description>** TODO: check the best way to represent a triplestore and its endpoints for: 
1- data insertion from files
2- SPARQL endpoint</dc:description>
        <schema2:URL>https://graphdb.dumontierlab.com/repositories/bio2rdf_remzi</schema2:URL>
        <schema2:URL>http://yasgui.org/#</schema2:URL>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download-_phenotype_annotations_to_variable -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download-_phenotype_annotations_to_variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download- phenotype annotations</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_phenotype_annotation_hpoteam.tab_Build_1263"/>
        <prov:entity rdf:resource="&opredict;Variable_Phenotype_annotations_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download-_phenotype_annotations_to_variable_v02 -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download-_phenotype_annotations_to_variable_v02">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download- phenotype annotations</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_phenotype_annotation_hpoteam.tab_Build_1266"/>
        <prov:entity rdf:resource="&opredict;Variable_Phenotype_annotations_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_Drugbank_dataset_to_variable -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_Drugbank_dataset_to_variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download Drugbank dataset</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_release-4-drugbank-drugbank.nq.gz"/>
        <prov:entity rdf:resource="&opredict;Variable_Drugbank_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_Human_interactome_barabasi_to_variable -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_Human_interactome_barabasi_to_variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download Human interactome barabasi</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_srep-2016-161017-srep35241-extref-srep35241-s3.txt"/>
        <prov:entity rdf:resource="&opredict;Variable_Human_interactome_barabasi_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_Kegg_dataset_to_variable -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_Kegg_dataset_to_variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download Kegg dataset</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_release-4-kegg-kegg-drug.nq.gz"/>
        <prov:entity rdf:resource="&opredict;Variable_Kegg_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_SIDER_dataset_to_variable -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_SIDER_dataset_to_variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download SIDER dataset</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_release-4-sider-sider-se.nq.gz"/>
        <prov:entity rdf:resource="&opredict;Variable_SIDER_dataset_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_gold_standard_drug_indications -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_gold_standard_drug_indications">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download gold_standard_drug_indications</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_gold_standard_drug_indications_msb201126-s4.xls"/>
        <prov:entity rdf:resource="&opredict;Variable_gold_standard_drug_indications_file_online"/>
        <prov:entity rdf:resource="&opredict;Variable_gold_standard_drug_indications_local"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_mesh_annotation_to_variable -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_mesh_annotation_to_variable">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download- mesh_annotation</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_mesh_annotation_mim2mesh.tsv"/>
        <prov:entity rdf:resource="&opredict;Variable_mesh_annotation_file_local"/>
        <prov:entity rdf:resource="&opredict;Variable_mesh_annotation_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Usage_Fetch_download_pubchem_to_drugbank -->

    <owl:NamedIndividual rdf:about="&opredict;Usage_Fetch_download_pubchem_to_drugbank">
        <rdf:type rdf:resource="&prov;Usage"/>
        <rdfs:label>Link variable to download Pubchem ids</rdfs:label>
        <prov:entity rdf:resource="&opredict;Distribution_pubchem_to_drugbank_pubchem.tsv"/>
        <prov:entity rdf:resource="&opredict;Variable_pubchem_to_drugbank_file_local"/>
        <prov:entity rdf:resource="&opredict;Variable_pubchem_to_drugbank_file_online"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Drugbank_dataset_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Drugbank_dataset_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Drugbank dataset local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Drugbank_dataset_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Drugbank_dataset_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Drugbank dataset online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Human_interactome_barabasi_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Human_interactome_barabasi_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Human interactome barabasi local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Human_interactome_barabasi_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Human_interactome_barabasi_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Human interactome barabasi online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Input_file_drugbank-drug-smiles_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Input_file_drugbank-drug-smiles_tab">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Input_file_drugbank-drug-target_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Input_file_drugbank-drug-target_tab">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Input_file_drugbank-sider-se_tab -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Input_file_drugbank-sider-se_tab">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Kegg_dataset_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Kegg_dataset_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Kegg dataset local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Kegg_dataset_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Kegg_dataset_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Kegg dataset online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Phenotype_annotations_file_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Phenotype_annotations_file_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Phenotype annotations file local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Phenotype_annotations_file_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Phenotype_annotations_file_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Phenotype annotations file online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Query_results_DRUG_SIDE_EFFECTS_from_SIDER -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Query_results_DRUG_SIDE_EFFECTS_from_SIDER">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Query_results_DRUG_SMILES_from_DRUGBANK -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Query_results_DRUG_SMILES_from_DRUGBANK">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Query_results_DRUG_TARGETS_from_DRUGBANK_and_KEGG -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Query_results_DRUG_TARGETS_from_DRUGBANK_and_KEGG">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_SIDER_dataset_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_SIDER_dataset_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>SIDER dataset local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_SIDER_dataset_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_SIDER_dataset_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>SIDER dataset online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_Triplestore_endpoint_for_input_data -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_Triplestore_endpoint_for_input_data">
        <rdf:type rdf:resource="&p-plan;Variable"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_gold_standard_drug_indications_file_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_gold_standard_drug_indications_file_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>gold_standard_drug_indications file online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_gold_standard_drug_indications_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_gold_standard_drug_indications_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>gold_standard_drug_indications file local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_mesh_annotation_file_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_mesh_annotation_file_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Mesh annotation file local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_mesh_annotation_file_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_mesh_annotation_file_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>mesh_annotation file online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_pubchem_to_drugbank_file_local -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_pubchem_to_drugbank_file_local">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>Pubchem file local</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#Variable_pubchem_to_drugbank_file_online -->

    <owl:NamedIndividual rdf:about="&opredict;Variable_pubchem_to_drugbank_file_online">
        <rdf:type rdf:resource="&p-plan;Variable"/>
        <rdfs:label>pubchem file online</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>
      &quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;drugid&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;smiles&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00014&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;CC(C)C[C@H](NC(=O)[C@@H](COC(C)(C)C)NC(=O)[C@H...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00035&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;NC(=O)CC[C@@H]1NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00091&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;CCC1NC(=O)C(C(O)C(C)CC=CC)N(C)C(=O)C(C(C)C)N(C...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00104&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C[C@@H](O)[C@@H](CO)NC(=O)[C@@H]1CSSC[C@H](NC(...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00114&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;CC1=NC=C(COP(O)(O)=O)C(C=O)=C1O&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;    drugid                                             smiles\n&quot;,
       &quot;0  DB00014  CC(C)C[C@H](NC(=O)[C@@H](COC(C)(C)C)NC(=O)[C@H...\n&quot;,
       &quot;1  DB00035  NC(=O)CC[C@@H]1NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)...\n&quot;,
       &quot;2  DB00091  CCC1NC(=O)C(C(O)C(C)CC=CC)N(C)C(=O)C(C(C)C)N(C...\n&quot;,
       &quot;3  DB00104  C[C@@H](O)[C@@H](CO)NC(=O)[C@@H]1CSSC[C@H](NC(...\n&quot;,
       &quot;4  DB00114                    CC1=NC=C(COP(O)(O)=O)C(C=O)=C1O&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell01_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text&quot;: [
      &quot;579 drugs have all Target feature \n&quot;,
      &quot;579 drugs have all Target GOA feature \n&quot;,
      &quot;583 drugs have all Fingerprint feature \n&quot;,
      &quot;524 drugs have all Sideeffect feature \n&quot;
     ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell02_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text&quot;: [
      &quot;579 drugs have all Target SEQ feature \n&quot;
     ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell03_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text&quot;: [
      &quot;579 579 583 524\n&quot;,
      &quot;510\n&quot;
     ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell04_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;drugid&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;umlsid&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00583&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C0000729&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00583&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C0000737&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00583&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C0002418&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00583&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C0002871&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00583&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C0003123&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;    drugid    umlsid\n&quot;,
       &quot;0  DB00583  C0000729\n&quot;,
       &quot;1  DB00583  C0000737\n&quot;,
       &quot;2  DB00583  C0002418\n&quot;,
       &quot;3  DB00583  C0002871\n&quot;,
       &quot;4  DB00583  C0003123&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell05_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Drug1&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Drug2&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;SE-SIM&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00366&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.085502&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01029&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.131285&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01217&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.145215&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00304&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.074890&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01400&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.076000&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;     Drug1    Drug2    SE-SIM\n&quot;,
       &quot;0  DB00882  DB00366  0.085502\n&quot;,
       &quot;1  DB00882  DB01029  0.131285\n&quot;,
       &quot;2  DB00882  DB01217  0.145215\n&quot;,
       &quot;3  DB00882  DB00304  0.074890\n&quot;,
       &quot;4  DB00882  DB01400  0.076000&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell08_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Drug1&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Drug2&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;PPI-SIM&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00366&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.044808&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01029&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.121802&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01217&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.121802&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00304&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.331091&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00882&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01400&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;0.044808&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;     Drug1    Drug2   PPI-SIM\n&quot;,
       &quot;0  DB00882  DB00366  0.044808\n&quot;,
       &quot;1  DB00882  DB01029  0.121802\n&quot;,
       &quot;2  DB00882  DB01217  0.121802\n&quot;,
       &quot;3  DB00882  DB00304  0.331091\n&quot;,
       &quot;4  DB00882  DB01400  0.044808&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_01_Pipeline_Source_Cell10_Execution_1546300862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;drugid&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;smiles&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00014&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;CC(C)C[C@H](NC(=O)[C@@H](COC(C)(C)C)NC(=O)[C@H...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00035&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;NC(=O)CC[C@@H]1NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00091&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;CCC1NC(=O)C(C(O)C(C)CC=CC)N(C)C(=O)C(C(C)C)N(C...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00104&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;C[C@@H](O)[C@@H](CO)NC(=O)[C@@H]1CSSC[C@H](NC(...&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00114&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;CC1=NC=C(COP(O)(O)=O)C(C=O)=C1O&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;    drugid                                             smiles\n&quot;,
       &quot;0  DB00014  CC(C)C[C@H](NC(=O)[C@@H](COC(C)(C)C)NC(=O)[C@H...\n&quot;,
       &quot;1  DB00035  NC(=O)CC[C@@H]1NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)...\n&quot;,
       &quot;2  DB00091  CCC1NC(=O)C(C(O)C(C)CC=CC)N(C)C(=O)C(C(C)C)N(C...\n&quot;,
       &quot;3  DB00104  C[C@@H](O)[C@@H](CO)NC(=O)[C@@H]1CSSC[C@H](NC(...\n&quot;,
       &quot;4  DB00114                    CC1=NC=C(COP(O)(O)=O)C(C=O)=C1O&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Feature_generation_Pipeline_OpenPREDICT_ipynb_v02_FeatureGeneration_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Drug&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Disease&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00659&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;103780&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00284&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;125853&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00284&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;125850&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00284&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;125851&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00284&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;600496&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;      Drug Disease\n&quot;,
       &quot;0  DB00659  103780\n&quot;,
       &quot;1  DB00284  125853\n&quot;,
       &quot;2  DB00284  125850\n&quot;,
       &quot;3  DB00284  125851\n&quot;,
       &quot;4  DB00284  600496&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell01_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/plain&quot;: [
       &quot;(4123, 1031)&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell05_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text&quot;: [
      &quot;Test: {&apos;f1&apos;: 0.760655737704918, &apos;average_precision&apos;: 0.8566906000076772, &apos;accuracy&apos;: 0.8583899127061105, &apos;recall&apos;: 0.6744186046511628, &apos;roc_auc&apos;: 0.8802152093700281, &apos;precision&apos;: 0.8721804511278195}\n&quot;
     ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell08_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>text/plain&quot;: [
       &quot;accuracy             0.833336\n&quot;,
       &quot;average_precision    0.810000\n&quot;,
       &quot;f1                   0.685671\n&quot;,
       &quot;precision            0.918820\n&quot;,
       &quot;recall               0.549804\n&quot;,
       &quot;roc_auc              0.836133\n&quot;,
       &quot;dtype: float64&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML.ipynb_Cell09_Execution_1546302862"/>
    </owl:NamedIndividual>
    


    <!-- http://purl.org/plex/Instances/OpenPREDICT#WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555 -->

    <owl:NamedIndividual rdf:about="&opredict;WorkflowExecutionArtifact_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555">
        <rdf:type rdf:resource="&opmw;WorkflowExecutionArtifact"/>
        <dc:description>&quot;text/html&quot;: [
       &quot;&lt;div&gt;\n&quot;,
       &quot;&lt;style scoped&gt;\n&quot;,
       &quot;    .dataframe tbody tr th:only-of-type {\n&quot;,
       &quot;        vertical-align: middle;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe tbody tr th {\n&quot;,
       &quot;        vertical-align: top;\n&quot;,
       &quot;    }\n&quot;,
       &quot;\n&quot;,
       &quot;    .dataframe thead th {\n&quot;,
       &quot;        text-align: right;\n&quot;,
       &quot;    }\n&quot;,
       &quot;&lt;/style&gt;\n&quot;,
       &quot;&lt;table border=\&quot;1\&quot; class=\&quot;dataframe\&quot;&gt;\n&quot;,
       &quot;  &lt;thead&gt;\n&quot;,
       &quot;    &lt;tr style=\&quot;text-align: right;\&quot;&gt;\n&quot;,
       &quot;      &lt;th&gt;&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Drug&lt;/th&gt;\n&quot;,
       &quot;      &lt;th&gt;Disease&lt;/th&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/thead&gt;\n&quot;,
       &quot;  &lt;tbody&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;0&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01148&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;231200&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;1&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01148&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;155100&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;2&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB01148&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;273800&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;3&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00575&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;607554&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;    &lt;tr&gt;\n&quot;,
       &quot;      &lt;th&gt;4&lt;/th&gt;\n&quot;,
       &quot;      &lt;td&gt;DB00575&lt;/td&gt;\n&quot;,
       &quot;      &lt;td&gt;171300&lt;/td&gt;\n&quot;,
       &quot;    &lt;/tr&gt;\n&quot;,
       &quot;  &lt;/tbody&gt;\n&quot;,
       &quot;&lt;/table&gt;\n&quot;,
       &quot;&lt;/div&gt;&quot;
      ],
      &quot;text/plain&quot;: [
       &quot;      Drug Disease\n&quot;,
       &quot;0  DB01148  231200\n&quot;,
       &quot;1  DB01148  155100\n&quot;,
       &quot;2  DB01148  273800\n&quot;,
       &quot;3  DB00575  607554\n&quot;,
       &quot;4  DB00575  171300&quot;
      ]</dc:description>
        <prov:qualifiedGeneration rdf:resource="&opredict;Generation_Output_Step_Model_preparation_train_and_evaluation_Workflow_OpenPREDCIT_-_ML_ipynb_v02_Execution_1546335555"/>
    </owl:NamedIndividual>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotations
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <rdf:Description rdf:about="&dc;publisher">
        <rdfs:seeAlso>http://purl.org/dc/elements/1.1/publisher</rdfs:seeAlso>
    </rdf:Description>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

